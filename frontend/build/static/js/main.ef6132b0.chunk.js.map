{"version":3,"sources":["features/user/userSlice.js","features/user/LogoutButton.js","features/header/Header.js","features/cards/CardList.js","features/cards/cardsSlice.js","selectors/CardSelectors.js","features/cards/AddCardButton.js","features/menus/ListOptionsMenuMain.js","features/lists/listsSlice.js","selectors/BoardSelectors.js","features/menus/MoveListMenu.js","features/menus/ListOptionsMenu.js","features/lists/ListOptionsDropDown.js","features/lists/List.js","selectors/ListSelectors.js","features/lists/AddListButton.js","features/lists/ListList.js","features/boards/Board.js","features/boards/boardsSlice.js","features/boards/AddBoardButton.js","features/boards/BoardButton.js","features/boards/BoardList.js","features/router/LoggedInRouter.js","features/user/LoginForm.js","features/user/LoginFormWrapper.js","features/user/RegistrationForm.js","features/user/RegistrationFormWrapper.js","features/router/LoggedOutRouter.js","selectors/UserSelectors.js","components/App.js","serviceWorker.js","reducers/index.js","index.js"],"names":["userSlice","createSlice","name","initialState","reducers","addUser","reducer","state","action","payload","username","email","token","prepare","deleteUser","actions","buttonStyle","display","position","marginRight","width","height","padding","mapDispatch","connect","useState","visible","setVisible","type","onClick","style","shape","icon","title","onOk","e","axios","get","then","res","Cookies","remove","path","catch","err","console","log","okText","onCancel","cancelText","headerStyle","backgroundImage","backgroundRepeat","backgroundPosition","backgroundSize","justifyContent","flexGrow","lineHeight","maxHeight","leftButtonContainer","rightButtonContainer","Header","to","cardStyle","borderRadius","zIndex","boxShadow","marginBottom","minHeight","maxWidth","bodyStyle","CardList","cards","Object","values","sort","a","b","map","card","key","id","cardsSlice","addCard","listId","description","deleteCard","moveCard","moveCards","keys","forEach","swapListId","getNumCards","filter","length","inputStyle","buttonContainer","flexDirection","alignContent","submitButtonStyle","backgroundColor","color","closeButtonStyle","borderColor","textAlign","minWidth","addButtonStyle","isVisible","setIsVisible","fromDropDown","cardTitle","setCardTitle","layout","onSubmit","preventDefault","trim","data","post","_id","Item","TextArea","value","onChange","target","placeholder","autoFocus","autoSize","htmlType","block","ghost","menuStyle","overflow","dividerStyle","margin","headerTitle","textOverflow","whiteSpace","menuGroupStyle","overflowX","overflowY","menuItemStyle","cursor","fontWeight","textDecoration","ListOptionsMenuMain","setShowingMoveList","handleClick","Divider","ItemGroup","listsSlice","addList","boardId","deleteList","moveList","newPosition","newBoardId","orderedLists","push","i","listArray","put","getActiveBoard","find","isActive","getTitle","getId","getPosition","Option","Select","alignItems","selectStyle","left","border","labelStyle","fontSize","boards","lists","selectedBoard","setSelectedBoard","selectedPosition","setSelectedPosition","defaultValue","ListOptionsMenu","showingMoveList","ellipsisStyle","float","ListOptionsDropDown","overlay","trigger","placement","listWrapper","boxSizing","verticalAlign","marginLeft","listContent","listHeader","flex","justify","List","wrapperRef","useRef","isTopVisible","setIsTopVisible","isBotVisible","setIsBotVisible","useEffect","document","addEventListener","handleClickOutside","removeEventListener","event","current","contains","ref","getNumLists","list","formStyle","showingInput","setShowingInput","listTitle","setListTitle","scrollingWrapper","flexWrap","boardsSlice","addBoard","owner","isPrivate","deleteBoard","setActive","boardTitle","setBoardTitle","board","wordWrap","buttonContainerStyle","user","LoggedInRouter","exact","render","props","match","params","marginTop","LoginForm","Form","create","getFieldDecorator","form","className","rules","required","message","prefix","formRef","setFormRef","saveFormRef","useCallback","node","validateFields","password","defaults","headers","common","set","resetFields","RegistrationForm","validator","rule","callback","force","getFieldValue","cookies","LoggedOutRouter","isLoggedIn","layoutStyle","fontFamily","contentStyle","baseURL","Content","Boolean","window","location","hostname","combineReducers","cardsReducer","listsReducer","boardsReducer","userReducer","store","configureStore","rootReducer","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ef6132b0.chunk.js","sourcesContent":["import { createSlice } from \"redux-starter-kit\";\r\n\r\nconst userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState: {},\r\n  reducers: {\r\n    addUser: {\r\n      reducer(state, action) {\r\n        const { username, email, token } = action.payload;\r\n        state[0] = { username, email, token };\r\n      },\r\n      prepare(username, email, token) {\r\n        return { payload: { username, email, token } };\r\n      }\r\n    },\r\n    deleteUser: {\r\n      reducer(state, action) {\r\n        delete state[0];\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nexport const { addUser, deleteUser } = userSlice.actions;\r\n\r\nexport default userSlice.reducer;\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteUser } from \"./userSlice\";\r\nimport axios from \"axios\";\r\nimport Cookies from \"universal-cookie\";\r\nimport { Modal, Button } from \"antd\";\r\n\r\nconst buttonStyle = {\r\n  display: \"inline-block\",\r\n  position: \"relative\",\r\n  marginRight: \"4px\",\r\n  width: \"32px\",\r\n  height: \"32px\",\r\n  padding: 0\r\n};\r\n\r\nconst LogoutButton = ({ deleteUser }) => {\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const showModal = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleYes = e => {\r\n    axios\r\n      .get(\"users/me/logout\")\r\n      .then(res => {\r\n        const cookies = new Cookies();\r\n        cookies.remove(\"trelloc token\", { path: \"/\" });\r\n        deleteUser();\r\n      })\r\n      .catch(err => {\r\n        console.log(\"Logout error!\");\r\n      });\r\n    setVisible(false);\r\n  };\r\n\r\n  const handleNo = e => {};\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        type=\"primary\"\r\n        onClick={showModal}\r\n        style={buttonStyle}\r\n        shape=\"circle\"\r\n        icon=\"codepen\"\r\n      ></Button>\r\n      <Modal\r\n        title=\"Logout\"\r\n        visible={visible}\r\n        onOk={handleYes}\r\n        okText=\"Yes\"\r\n        onCancel={handleNo}\r\n        cancelText=\"No\"\r\n      >\r\n        <p>Are you sure you want to log out?</p>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatch = { deleteUser };\r\n\r\nexport default connect(null, mapDispatch)(LogoutButton);\r\n","import React from \"react\";\r\nimport { Layout, Button } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport LogoutButton from \"../user/LogoutButton\";\r\n\r\nconst headerStyle = {\r\n  backgroundImage:\r\n    \"url(https://a.trellocdn.com/prgb/dist/images/header-logo-2x.01ef898811a879595cea.png)\",\r\n  backgroundRepeat: \"no-repeat\",\r\n  backgroundPosition: \"center center\",\r\n  backgroundSize: \"80px 30px\",\r\n  height: \"40px\",\r\n  width: \"100%\",\r\n  display: \"flex\",\r\n  justifyContent: \"flex-start\",\r\n  flexGrow: 1,\r\n  padding: \"4px\",\r\n  lineHeight: \"0\",\r\n  maxHeight: \"40px\"\r\n};\r\n\r\nconst leftButtonContainer = {\r\n  display: \"flex\",\r\n  justifyContent: \"flex-start\",\r\n  flexGrow: 1\r\n};\r\n\r\nconst rightButtonContainer = {\r\n  display: \"flex\",\r\n  justifyContent: \"flex-end\",\r\n  flexGrow: 1\r\n};\r\n\r\nconst buttonStyle = {\r\n  display: \"inline-block\",\r\n  position: \"relative\",\r\n  marginRight: \"4px\",\r\n  width: \"32px\",\r\n  height: \"32px\",\r\n  padding: 0\r\n};\r\n\r\nconst Header = () => {\r\n  return (\r\n    <Layout.Header style={headerStyle}>\r\n      <div style={leftButtonContainer}>\r\n        <Link to=\"/\">\r\n          <Button style={buttonStyle} icon=\"home\" />\r\n        </Link>\r\n        <Button style={buttonStyle} icon=\"file-search\" />\r\n        <Button style={buttonStyle} icon=\"search\" />\r\n      </div>\r\n      <div style={rightButtonContainer}>\r\n        <Button style={buttonStyle} icon=\"plus\" />\r\n        <Button style={buttonStyle} icon=\"bell\" />\r\n        <LogoutButton />\r\n      </div>\r\n    </Layout.Header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Card } from \"antd\";\r\n\r\nconst cardStyle = {\r\n  borderRadius: \"3px\",\r\n  zIndex: 10,\r\n  boxShadow: \"0 1px 0 rgba(9, 30, 66, .25)\",\r\n  marginBottom: \"8px\",\r\n  minHeight: \"20px\",\r\n  maxWidth: \"300px\",\r\n  padding: \"0px !important\"\r\n};\r\n\r\nconst bodyStyle = {\r\n  padding: \"6px 8px 2px\"\r\n};\r\n\r\nconst CardList = ({ cards }) => (\r\n  <div>\r\n    {Object.values(cards).sort(function(a, b){return a.position - b.position}).map(card => (\r\n      <Card key={card.id} style={cardStyle} bodyStyle={bodyStyle}>\r\n        {card.title}\r\n      </Card>\r\n    ))}\r\n  </div>\r\n);\r\n\r\nexport default CardList;\r\n","import { createSlice } from \"redux-starter-kit\";\r\n\r\nconst cardsSlice = createSlice({\r\n  name: \"cards\",\r\n  initialState: {},\r\n  reducers: {\r\n    addCard: {\r\n      reducer(state, action) {\r\n        const { id, listId, title, description, position } = action.payload;\r\n\r\n        state[id] = { id, listId, title, description, position };\r\n      },\r\n      prepare(id, listId, title, description, position) {\r\n        return {\r\n          payload: { id, listId, title, description, position }\r\n        };\r\n      }\r\n    },\r\n    deleteCard: {\r\n      reducer(state, action) {\r\n        delete state[action.payload.id];\r\n      }\r\n    },\r\n    moveCard: {\r\n      reducer(state, action) {\r\n        state[action.payload.id].listId = action.payload.listId;\r\n      }\r\n    },\r\n    moveCards: {\r\n      reducer(state, action) {\r\n        Object.keys(state).forEach(key => {\r\n          if (state[key].listId === action.payload.listId)\r\n            state[key].listId = action.payload.swapListId;\r\n        });\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nexport const { addCard, deleteCard, moveCard, moveCards } = cardsSlice.actions;\r\n\r\nexport default cardsSlice.reducer;\r\n","export const getNumCards = (state, listId) => {\r\n    return Object.values(state).filter(card => card.listId === listId).length;\r\n  };\r\n  ","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addCard } from \"./cardsSlice\";\r\nimport { Form, Input, Button } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { getNumCards } from \"../../selectors/CardSelectors\"\r\n\r\nconst inputStyle = {\r\n  maxHeight: \"162px\",\r\n  minHeight: \"54px\"\r\n};\r\n\r\nconst buttonContainer = {\r\n  display: \"flex\",\r\n  flexDirection: \"row\",\r\n  justifyContent: \"flex-start\",\r\n  alignContent: \"center\"\r\n};\r\n\r\nconst submitButtonStyle = {\r\n  minHeight: \"38px\",\r\n  maxHeight: \"38px\",\r\n  backgroundColor: \"#5aac44\",\r\n  color: \"white\"\r\n};\r\n\r\nconst closeButtonStyle = {\r\n  borderColor: \"#ebecf0\",\r\n  color: \"#5e6c84\",\r\n  textAlign: \"left\",\r\n  boxShadow: \"none\",\r\n  height: \"38px\",\r\n  width: \"38px\",\r\n  minWidth: \"38px\"\r\n};\r\n\r\nconst addButtonStyle = {\r\n  borderColor: \"#ebecf0\",\r\n  color: \"#5e6c84\",\r\n  textAlign: \"left\",\r\n  boxShadow: \"none\"\r\n};\r\n\r\nconst mapDispatch = { addCard };\r\n\r\nconst AddCardButton = ({\r\n  cards,\r\n  addCard,\r\n  listId,\r\n  isVisible,\r\n  setIsVisible,\r\n  fromDropDown\r\n}) => {\r\n  const [cardTitle, setCardTitle] = useState(\"\");\r\n\r\n  const onChange = e => setCardTitle(e.target.value);\r\n\r\n  if (isVisible)\r\n    return (\r\n      <Form\r\n        layout=\"inline\"\r\n        onSubmit={e => {\r\n          e.preventDefault();\r\n          if (!cardTitle.trim()) return;\r\n\r\n          const data = {\r\n            listId: listId,\r\n            title: cardTitle,\r\n            description: \"\",\r\n            position: getNumCards(cards, listId)\r\n          };\r\n          axios\r\n            .post(\"http://localhost:8082/api/cards\", data)\r\n            .then(res => {\r\n              addCard(res.data.card._id, listId, cardTitle, getNumCards(cards, listId));\r\n            })\r\n            .catch(err => {\r\n              console.log(\"Error in CreateCard!\");\r\n            });\r\n\r\n          setCardTitle(\"\");\r\n          setIsVisible(false);\r\n        }}\r\n      >\r\n        <Form.Item style={{ width: \"100%\" }}>\r\n          <Input.TextArea\r\n            style={inputStyle}\r\n            value={cardTitle}\r\n            onChange={onChange}\r\n            type=\"text\"\r\n            placeholder=\"Enter a title for this card...\"\r\n            autoFocus={true}\r\n            autoSize={true}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <div style={buttonContainer}>\r\n            <Button htmlType=\"submit\" style={submitButtonStyle} block>\r\n              Add Card\r\n            </Button>\r\n            <Button\r\n              ghost={true}\r\n              onClick={() => {\r\n                setIsVisible(false);\r\n                setCardTitle(\"\");\r\n              }}\r\n              style={closeButtonStyle}\r\n              icon=\"close\"\r\n            />\r\n          </div>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  else if (!isVisible && !fromDropDown)\r\n    return (\r\n      <Button\r\n        block\r\n        ghost={true}\r\n        onClick={() => {\r\n          setIsVisible(true);\r\n        }}\r\n        style={addButtonStyle}\r\n        icon=\"plus\"\r\n      >\r\n        Add another card\r\n      </Button>\r\n    );\r\n  else return null;\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  cards: state.cards\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatch)(AddCardButton);\r\n","import React from \"react\";\r\nimport { Menu } from \"antd\";\r\n\r\nconst menuStyle = {\r\n    width: \"304px\",\r\n    overflow: \"hidden\"\r\n  };\r\n  \r\n  const dividerStyle = {\r\n    margin: \"4px 0\"\r\n  };\r\n  \r\n  const headerStyle = {\r\n    display: \"block\",\r\n    textAlign: \"center\",\r\n    height: \"40px\",\r\n    color: \"#172b4d\"\r\n  };\r\n  \r\n  const headerTitle = {\r\n    display: \"block\",\r\n    lineHeight: \"40px\",\r\n    margin: \"0 12px\",\r\n    overflow: \"hidden\",\r\n    padding: \"0 32px\",\r\n    textOverflow: \"ellipsis\",\r\n    whiteSpace: \"nowrap\"\r\n  };\r\n  \r\n  const menuGroupStyle = {\r\n    overflowX: \"hidden\",\r\n    overflowY: \"auto\",\r\n    padding: \"0 12px 12px\"\r\n  };\r\n  \r\n  const menuItemStyle = {\r\n    cursor: \"pointer\",\r\n    display: \"block\",\r\n    fontWeight: \"400\",\r\n    padding: \"6px 12px\",\r\n    margin: \"0 -12px\",\r\n    textDecoration: \"none\",\r\n    color: \"#172b4d\"\r\n  };\r\n\r\nconst handleClick = (e, setIsVisible, setShowingMoveList) => {\r\n    if (e.key === \"1\") setIsVisible(true);\r\n    else if (e.key === \"3\") setShowingMoveList(true);\r\n  };\r\n\r\nconst ListOptionsMenuMain = ({ setIsVisible, setShowingMoveList }) => {\r\n    return (\r\n        <Menu\r\n          onClick={e => handleClick(e, setIsVisible, setShowingMoveList)}\r\n          style={menuStyle}\r\n        >\r\n          <Menu.Item style={headerStyle}>\r\n            <span style={headerTitle}>List Actions</span>\r\n          </Menu.Item>\r\n          <Menu.Divider style={dividerStyle} />\r\n          <Menu.ItemGroup style={menuGroupStyle}>\r\n            <Menu.Item key=\"1\" style={menuItemStyle}>\r\n              Add Card...\r\n            </Menu.Item>\r\n            <Menu.Item key=\"2\" style={menuItemStyle}>\r\n              Copy List...\r\n            </Menu.Item>\r\n            <Menu.Item key=\"3\" style={menuItemStyle}>\r\n              Move List...\r\n            </Menu.Item>\r\n            <Menu.Item key=\"4\" style={menuItemStyle}>\r\n              Watch\r\n            </Menu.Item>\r\n            <Menu.Divider style={dividerStyle} />\r\n            <Menu.Item key=\"5\" style={menuItemStyle}>\r\n              Sort By...\r\n            </Menu.Item>\r\n            <Menu.Divider style={dividerStyle} />\r\n            <Menu.Item key=\"6\" style={menuItemStyle}>\r\n              Move All Cards in This List...\r\n            </Menu.Item>\r\n            <Menu.Item key=\"7\" style={menuItemStyle}>\r\n              Archive All Cards in This List...\r\n            </Menu.Item>\r\n            <Menu.Divider style={dividerStyle} />\r\n            <Menu.Item key=\"8\" style={menuItemStyle}>\r\n              Archive This List\r\n            </Menu.Item>\r\n          </Menu.ItemGroup>\r\n        </Menu>\r\n    )\r\n}\r\n\r\nexport default ListOptionsMenuMain;","import { createSlice } from \"redux-starter-kit\";\r\nimport axios from \"axios\";\r\n\r\nconst listsSlice = createSlice({\r\n  name: \"lists\",\r\n  initialState: {},\r\n  reducers: {\r\n    addList: {\r\n      reducer(state, action) {\r\n        const { id, boardId, title, position } = action.payload;\r\n\r\n        state[id] = { id, boardId, title, position };\r\n      },\r\n      prepare(id, boardId, title, position) {\r\n        return { payload: { id, boardId, title, position } };\r\n      }\r\n    },\r\n    deleteList: {\r\n      reducer(state, action) {\r\n        delete state[action.payload.id];\r\n      }\r\n    },\r\n    moveList: {\r\n      reducer(state, action) {\r\n        const { listId, newPosition, newBoardId } = action.payload;\r\n        console.log(newPosition);\r\n\r\n        let orderedLists = [];\r\n        Object.keys(state).map(key =>\r\n          state[key].boardId === newBoardId\r\n            ? orderedLists.push([state[key], key])\r\n            : null\r\n        );\r\n        orderedLists.sort((a, b) => a[0].position - b[0].position);\r\n\r\n        if (state[listId].boardId !== newBoardId) {\r\n          state[listId].position = orderedLists.length;\r\n          state[listId].boardId = newBoardId;\r\n          orderedLists.push([state[listId], listId]);\r\n        }\r\n\r\n        if (state[listId].position < orderedLists.length - 1)\r\n          for (let i = state[listId].position + 1; i <= newPosition; i++)\r\n            orderedLists[i][0].position -= 1;\r\n        else\r\n          for (let i = newPosition; i < state[listId].position; i++)\r\n            orderedLists[i][0].position += 1;\r\n        state[listId].position = newPosition;\r\n\r\n        orderedLists.forEach(\r\n          listArray => (state[listArray[1]].position = listArray[0].position)\r\n        );\r\n\r\n        Object.keys(state).map(key => {\r\n          const data = {\r\n            boardId: state[key].boardId,\r\n            title: state[key].title,\r\n            position: state[key].position,\r\n          }\r\n          axios\r\n          .put(\"http://localhost:8082/api/lists/\" + state[key].id, data)\r\n          .catch(err => {\r\n            console.log(\"Error in CreateBoard!\");\r\n          });\r\n        })\r\n      },\r\n      prepare(listId, newPosition, newBoardId) {\r\n        return { payload: { listId, newPosition, newBoardId } };\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nexport const { addList, deleteList, moveList } = listsSlice.actions;\r\n\r\nexport default listsSlice.reducer;\r\n","export const getActiveBoard = (state) => { \r\n   return state[Object.keys(state).find(key => state[key].isActive === true)];\r\n}\r\n\r\nexport const getObjectById = (state, id) => { \r\n  return Object.keys(state).find(key => state[key].id === id);\r\n}\r\n\r\nexport const getObjectIds = (state) => {\r\n  return state.map(item => item.id);\r\n}\r\n\r\nexport const getTitle = (state) => { \r\n  return state.title;\r\n}\r\n\r\nexport const getId = (state) => {\r\n  return state.id;\r\n}\r\n\r\nexport const getPosition = (state) => {\r\n  return state.position;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Menu, Button, Select } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { moveList } from \"../lists/listsSlice\";\r\nimport { getActiveBoard, getTitle, getId, getPosition } from \"../../selectors/BoardSelectors\"\r\n\r\nconst { Option } = Select;\r\n\r\nconst menuStyle = {\r\n  width: \"304px\",\r\n  overflow: \"hidden\",\r\n  height: \"auto\"\r\n};\r\n\r\nconst dividerStyle = {\r\n  margin: \"4px 0\"\r\n};\r\n\r\nconst headerStyle = {\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  textAlign: \"center\",\r\n  justifyContent: \"space-between\",\r\n  height: \"40px\",\r\n  color: \"#172b4d\"\r\n};\r\n\r\nconst headerTitle = {\r\n  display: \"block\",\r\n  lineHeight: \"40px\",\r\n  margin: \"0 12px\",\r\n  overflow: \"hidden\",\r\n  padding: \"0 32px\",\r\n  textOverflow: \"ellipsis\",\r\n  whiteSpace: \"nowrap\"\r\n};\r\n\r\nconst buttonStyle = {\r\n  borderColor: \"transparent\",\r\n  color: \"#5e6c84\",\r\n  textAlign: \"left\",\r\n  boxShadow: \"none\",\r\n  display: \"block\",\r\n  height: \"auto\",\r\n  padding: \"10px 8px 10px 12px\"\r\n};\r\n\r\nconst selectStyle = {\r\n  left: 0,\r\n  margin: 0,\r\n  border: \"none\",\r\n  width: \"100%\"\r\n};\r\n\r\nconst labelStyle = {\r\n  height: \"8px\",\r\n  margin: \"8px\",\r\n  padding: \"4px\",\r\n  fontSize: \"14px\",\r\n  fontWeight: 600\r\n};\r\n\r\nconst handleClick = (e, setIsVisible, setShowingMoveList) => {\r\n  if (e.key === \"1\") setIsVisible(true);\r\n  else if (e.key === \"3\") setShowingMoveList(true);\r\n};\r\n\r\nconst MoveListMenu = ({\r\n  setIsVisible,\r\n  setShowingMoveList,\r\n  listId,\r\n  boards,\r\n  lists,\r\n  moveList\r\n}) => {\r\n  const [selectedBoard, setSelectedBoard] = useState(getId(getActiveBoard(boards)));\r\n  const [selectedPosition, setSelectedPosition] = useState(getPosition(lists[listId]));\r\n\r\n  return (\r\n    <Menu\r\n      onClick={e => handleClick(e, setIsVisible, setShowingMoveList)}\r\n      style={menuStyle}\r\n    >\r\n      <Menu.Item style={headerStyle}>\r\n        <Button\r\n          onClick={() => setShowingMoveList(false)}\r\n          icon=\"left\"\r\n          style={buttonStyle}\r\n        />\r\n        <span style={headerTitle}>Move List</span>\r\n        <Button icon=\"close\" style={buttonStyle}/>\r\n      </Menu.Item>\r\n      <Menu.Divider style={dividerStyle} />\r\n      <div>\r\n        <div style={labelStyle}>Board: </div>\r\n        <Select\r\n          defaultValue={getTitle(getActiveBoard(boards))}\r\n          style={selectStyle}\r\n          onChange={value => setSelectedBoard(value)}\r\n        >\r\n          {Object.keys(boards).map(key => (\r\n            <Option value={getId(boards[key])} key={key}>\r\n              {getTitle(boards[key])}\r\n            </Option>\r\n          ))}\r\n        </Select>\r\n      </div>\r\n      <div style={labelStyle}>Position: </div>\r\n      <Select\r\n        defaultValue={listId}\r\n        style={selectStyle}\r\n        onChange={value => setSelectedPosition(value)}\r\n      >\r\n        {Object.keys(lists).map(key =>\r\n          lists[key].boardId === selectedBoard ? (\r\n            <Option value={getPosition(lists[key])} key={key}>\r\n              {getPosition(lists[key])}\r\n              {getPosition(lists[key]) === listId ? \" (current)\" : null}\r\n            </Option>\r\n          ) : null\r\n        )}\r\n      </Select>\r\n      <Menu.Item>\r\n        <Button\r\n          onClick={() => moveList(listId, selectedPosition, selectedBoard)}\r\n        >\r\n          Move\r\n        </Button>\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  boards: state.boards,\r\n  lists: state.lists\r\n});\r\n\r\nconst mapDispatch = { moveList };\r\n\r\nexport default connect(mapStateToProps, mapDispatch)(MoveListMenu);\r\n","import React from \"react\";\r\nimport ListOptionsMenuMain from \"./ListOptionsMenuMain\";\r\nimport MoveListMenu from \"./MoveListMenu\";\r\n\r\nconst ListOptionsMenu = ({\r\n  setIsVisible,\r\n  showingMoveList,\r\n  setShowingMoveList,\r\n  listId\r\n}) => {\r\n  if (showingMoveList)\r\n    return (\r\n      <MoveListMenu\r\n        setIsVisible={setIsVisible}\r\n        setShowingMoveList={setShowingMoveList}\r\n        listId={listId}\r\n      />\r\n    );\r\n  else\r\n    return (\r\n      <ListOptionsMenuMain\r\n        setIsVisible={setIsVisible}\r\n        setShowingMoveList={setShowingMoveList}\r\n      />\r\n    );\r\n};\r\n\r\nexport default ListOptionsMenu;\r\n","import React, { useState } from \"react\";\r\nimport { Dropdown, Icon } from \"antd\";\r\nimport ListOptionsMenu from \"../menus/ListOptionsMenu\";\r\n\r\nconst ellipsisStyle = {\r\n  borderColor: \"#ebecf0\",\r\n  color: \"#5e6c84\",\r\n  textAlign: \"left\",\r\n  boxShadow: \"none\",\r\n  float: \"right\"\r\n};\r\n\r\nconst ListOptionsDropDown = ({ setIsVisible, listId }) => {\r\n  const [showingMoveList, setShowingMoveList] = useState(false);\r\n\r\n  return (\r\n    <Dropdown\r\n      overlay={\r\n        <ListOptionsMenu\r\n          setIsVisible={setIsVisible}\r\n          showingMoveList={showingMoveList}\r\n          setShowingMoveList={setShowingMoveList}\r\n          listId={listId}\r\n        />\r\n      }\r\n      trigger={[\"click\"]}\r\n      placement=\"bottomRight\"\r\n    >\r\n      <Icon type=\"ellipsis\" style={ellipsisStyle} />\r\n    </Dropdown>\r\n  );\r\n};\r\n\r\nexport default ListOptionsDropDown;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport CardList from \"../cards/CardList\";\r\nimport AddCardButton from \"../cards/AddCardButton\";\r\nimport ListOptionsDropDown from \"./ListOptionsDropDown\";\r\nimport { Card } from \"antd\";\r\n\r\nconst listWrapper = {\r\n  width: \"272px\",\r\n  height: \"100%\",\r\n  margin: \"0 4px\",\r\n  boxSizing: \"border-box\",\r\n  display: \"inline-block\",\r\n  verticalAlign: \"top\"\r\n};\r\n\r\nconst cardStyle = {\r\n  width: \"272px\",\r\n  backgroundColor: \"#ebecf0\",\r\n  marginLeft: \"8px\",\r\n  borderRadius: \"3px\",\r\n  boxSizing: \"border-box\",\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  maxHeight: \"100%\",\r\n  overflowY: \"hidden\"\r\n};\r\n\r\nconst listContent = {};\r\n\r\nconst listHeader = {\r\n  flex: \"0 0 auto\",\r\n  padding: \"10px 8px\",\r\n  position: \"relative\",\r\n  minHeight: \"20px\",\r\n  fontWeight: 600\r\n};\r\n\r\nconst buttonStyle = {\r\n  minWidth: \"100%\",\r\n  position: \"relative\",\r\n  padding: \"4px 0px\",\r\n  display: \"flex\",\r\n  justify: \"space-between\"\r\n};\r\n\r\nconst ellipsisStyle = {\r\n  borderColor: \"#ebecf0\",\r\n  color: \"#5e6c84\",\r\n  textAlign: \"left\",\r\n  boxShadow: \"none\",\r\n  float: \"right\"\r\n};\r\n\r\nconst List = ({ id, title, cards }) => {\r\n  const wrapperRef = useRef(null);\r\n  const [isTopVisible, setIsTopVisible] = useState(false);\r\n  const [isBotVisible, setIsBotVisible] = useState(false);\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"mousedown\", handleClickOutside, false);\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClickOutside, false);\r\n    };\r\n  }, []);\r\n\r\n  const handleClickOutside = event => {\r\n    if (wrapperRef.current && !wrapperRef.current.contains(event.target)) {\r\n      setIsTopVisible(false);\r\n      setIsBotVisible(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={listWrapper} ref={wrapperRef}>\r\n      <Card style={cardStyle} bodyStyle={{ padding: \"0 4px\" }}>\r\n        <div style={listContent}>\r\n          <div style={listHeader}>\r\n            {title}{\" \"}\r\n            <ListOptionsDropDown\r\n              style={ellipsisStyle}\r\n              setIsVisible={setIsTopVisible}\r\n              listId={id}\r\n            />\r\n          </div>\r\n          <div style={buttonStyle}>\r\n            <AddCardButton\r\n              listId={id}\r\n              isVisible={isTopVisible}\r\n              setIsVisible={setIsTopVisible}\r\n              fromDropDown={true}\r\n            >\r\n              Add another card\r\n            </AddCardButton>\r\n          </div>\r\n          <div style={{ zIndex: 10, maxHeight: \"80vh\", overflowY: \"scroll\" }}>\r\n            <CardList cards={cards} />\r\n          </div>\r\n          <div style={buttonStyle}>\r\n            <AddCardButton\r\n              listId={id}\r\n              isVisible={isBotVisible}\r\n              setIsVisible={setIsBotVisible}\r\n              fromDropDown={false}\r\n            >\r\n              Add another card\r\n            </AddCardButton>\r\n          </div>\r\n        </div>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","export const getNumLists = (state, boardId) => {\r\n  return Object.values(state).filter(list => list.boardId === boardId).length;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addList } from \"./listsSlice\";\r\nimport { Form, Input, Button } from \"antd\";\r\nimport { getNumLists } from \"../../selectors/ListSelectors\"\r\nimport axios from \"axios\";\r\n\r\nconst buttonStyle = {\r\n  marginLeft: \"8px\",\r\n  minHeight: \"38px\",\r\n  maxHeight: \"38px\",\r\n  backgroundColor: \"hsla(0, 0%, 100%, .24)\",\r\n  color: \"white\",\r\n  borderColor: \"transparent\",\r\n  width: \"272px\",\r\n  display: \"flex\",\r\n  justifyContent: \"flex-start\",\r\n  maxWidth: \"272px\"\r\n};\r\n\r\nconst formStyle = {\r\n  marginLeft: \"8px\"\r\n};\r\n\r\nconst mapDispatch = { addList };\r\n\r\nconst AddListButton = ({ lists, addList, boardId }) => {\r\n  const [showingInput, setShowingInput] = useState(false);\r\n  const [listTitle, setListTitle] = useState(\"\");\r\n\r\n  const onChange = e => setListTitle(e.target.value);\r\n\r\n  if (showingInput)\r\n    return (\r\n      <Form\r\n        layout=\"inline\"\r\n        onSubmit={e => {\r\n          e.preventDefault();\r\n          if (!listTitle.trim()) return;\r\n\r\n          const data = {\r\n            boardId: boardId,\r\n            title: listTitle,\r\n            position: getNumLists(lists, boardId)\r\n          };\r\n          axios\r\n            .post(\"lists\", data)\r\n            .then(res => {\r\n              addList(res.data.list._id, boardId, listTitle, getNumLists(lists, boardId));\r\n            })\r\n            .catch(err => {\r\n              console.log(\"Error in CreateBoard!\");\r\n            });\r\n\r\n          setListTitle(\"\");\r\n          setShowingInput(false);\r\n        }}\r\n        style={formStyle}\r\n      >\r\n        <Form.Item>\r\n          <Input\r\n            value={listTitle}\r\n            onChange={onChange}\r\n            type=\"text\"\r\n            placeholder=\"Enter a list title...\"\r\n            autoFocus={true}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button htmlType=\"submit\" style={buttonStyle}>\r\n            Add List\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  else\r\n    return (\r\n      <Button\r\n        onClick={() => setShowingInput(true)}\r\n        style={buttonStyle}\r\n        icon=\"plus\"\r\n      >\r\n        Add another list\r\n      </Button>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  lists: state.lists\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatch)(AddListButton);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport List from \"./List\";\r\nimport AddListButton from \"./AddListButton\";\r\nimport { addList } from \"./listsSlice\";\r\nimport { addCard } from \"../cards/cardsSlice\";\r\nimport axios from \"axios\";\r\n\r\nconst scrollingWrapper = {\r\n  display: \"flex\",\r\n  overflowX: \"auto\",\r\n  flexWrap: \"nowrap\",\r\n  height: \"calc(100vh - 45px)\"\r\n};\r\n\r\nconst ListList = ({ addList, addCard, boardId, lists, cards }) => {\r\n  useEffect(() => {\r\n    axios.get(\"lists\").then(res => {\r\n      res.data.map(list => {\r\n        addList(list._id, list.boardId, list.title, list.position);\r\n      });\r\n    });\r\n\r\n    axios.get(\"cards\").then(res => {\r\n      res.data.map(card => {\r\n        addCard(card._id, card.listId, card.title, card.description, card.position);\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div style={scrollingWrapper}>\r\n      {lists\r\n        ? Object.values(lists)\r\n            .sort((a, b) => a.position - b.position)\r\n            .map((list, i) => (\r\n              <List\r\n                key={list.id}\r\n                {...list}\r\n                cards={Object.values(cards).filter(\r\n                  card => card.listId === list.id\r\n                )}\r\n              />\r\n            ))\r\n        : null}\r\n      <AddListButton boardId={boardId} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  cards: state.cards\r\n});\r\n\r\nconst mapDispatch = { addList, addCard };\r\n\r\nexport default connect(mapStateToProps, mapDispatch)(ListList);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport ListList from \"../lists/ListList\";\r\n\r\nconst Board = ({ id, lists }) => {\r\n  return (\r\n    <div>\r\n      <ListList\r\n        boardId={id}\r\n        lists={Object.values(lists).filter(\r\n          list => list.boardId === id\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  lists: state.lists\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(Board);\r\n","import { createSlice } from \"redux-starter-kit\";\r\n\r\nconst boardsSlice = createSlice({\r\n  name: \"boards\",\r\n  initialState: {},\r\n  reducers: {\r\n    addBoard: {\r\n      reducer(state, action) {\r\n        const { id, owner, title, isPrivate, isActive } = action.payload;\r\n        state[id] = { id, owner, title, isPrivate, isActive };\r\n      },\r\n      prepare(id, owner, title, isPrivate, isActive) {\r\n        return { payload: { id, owner, title, isPrivate, isActive } };\r\n      }\r\n    },\r\n    deleteBoard: {\r\n      reducer(state, action) {\r\n        delete state[action.payload.id];\r\n      }\r\n    },\r\n    setActive: {\r\n      reducer(state, action) {\r\n        Object.keys(state).forEach(key => {\r\n          if (state[key].isActive === true) state[key].isActive = false;\r\n        });\r\n        state[action.payload.id].isActive = action.payload.isActive;\r\n      },\r\n      prepare(id, isActive) {\r\n        return { payload: { id, isActive } };\r\n      }\r\n    },\r\n  }\r\n});\r\n\r\nexport const {\r\n  addBoard,\r\n  deleteBoard,\r\n  setActive\r\n} = boardsSlice.actions;\r\n\r\nexport default boardsSlice.reducer;\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addBoard } from \"./boardsSlice\";\r\nimport { Form, Input, Button } from \"antd\";\r\nimport axios from \"axios\";\r\n\r\nconst buttonStyle = {\r\n  marginRight: \"8px\",\r\n  marginBottom: \"8px\",\r\n  backgroundColor: \"#97a0af\",\r\n  height: \"80px\",\r\n  width: \"100%\",\r\n  fontSize: \"16px\",\r\n  fontWeight: 700,\r\n  color: \"white\",\r\n  borderColor: \"transparent\"\r\n};\r\n\r\nconst formStyle = {\r\n  marginLeft: \"8px\"\r\n};\r\n\r\nconst mapDispatch = { addBoard };\r\n\r\nconst AddBoardButton = ({ addBoard }) => {\r\n  const [showingInput, setShowingInput] = useState(false);\r\n  const [boardTitle, setBoardTitle] = useState(\"\");\r\n\r\n  const onChange = e => setBoardTitle(e.target.value);\r\n\r\n  if (showingInput)\r\n    return (\r\n      <Form\r\n        layout=\"inline\"\r\n        onSubmit={e => {\r\n          e.preventDefault();\r\n          if (!boardTitle.trim()) return;\r\n\r\n          const data = {\r\n            title: boardTitle,\r\n            isPrivate: true,\r\n            isActive: false\r\n          };\r\n          axios\r\n            .post(\"boards\", data)\r\n            .then(res => {\r\n              addBoard(res.data.board._id, res.data.board.owner, boardTitle, true, false);\r\n            })\r\n            .catch(err => {\r\n              console.log(\"Error in CreateBoard!\");\r\n            });\r\n\r\n          setBoardTitle(\"\");\r\n          setShowingInput(false);\r\n        }}\r\n        style={formStyle}\r\n      >\r\n        <Form.Item>\r\n          <Input\r\n            value={boardTitle}\r\n            onChange={onChange}\r\n            type=\"text\"\r\n            placeholder=\"Enter a board title...\"\r\n            autoFocus={true}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button htmlType=\"submit\" style={buttonStyle}>\r\n            Add Board\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  else\r\n    return (\r\n      <Button onClick={() => setShowingInput(true)} style={buttonStyle}>\r\n        Create new board\r\n      </Button>\r\n    );\r\n};\r\n\r\nexport default connect(null, mapDispatch)(AddBoardButton);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setActive } from \"./boardsSlice\";\r\nimport { Button } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst buttonStyle = {\r\n    backgroundColor: \"rgb(81, 152, 57)\",\r\n    height: \"80px\",\r\n    width: \"100%\",\r\n    fontSize: \"16px\",\r\n    fontWeight: 700,\r\n    color: \"white\",\r\n    display: \"inline-block\",\r\n    overflow: \"hidden\",\r\n    wordWrap: \"break-word\",\r\n    flex: \"0 0 auto\",\r\n    borderColor: \"transparent\",\r\n}\r\n\r\nconst mapDispatch = { setActive };\r\n\r\nconst BoardButton = ({ id, title, isPrivate, setActive }) => {\r\n  return (\r\n    <Link to={\"/user/boards/\" + id}>\r\n      <Button style={buttonStyle} onClick={() => setActive(id, true)}>{title}</Button>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default connect(null, mapDispatch)(BoardButton);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Icon } from \"antd\";\r\nimport AddBoardButton from \"./AddBoardButton\";\r\nimport BoardButton from \"./BoardButton\";\r\nimport axios from \"axios\";\r\nimport { addBoard } from \"./boardsSlice\";\r\n\r\nconst headerStyle = {\r\n  color: \"white\",\r\n  fontSize: \"24px\",\r\n  lineHeight: \"20px\",\r\n  fontWeight: 400\r\n};\r\n\r\nconst buttonContainerStyle = {\r\n  display: \"flex\",\r\n  flexWrap: \"wrap\",\r\n  flexGrow: 1,\r\n  minHeight: \"100%\",\r\n  width: \"100%\"\r\n};\r\n\r\nconst buttonStyle = {\r\n  width: \"calc(50% - 4px)\",\r\n  marginRight: \"4px\",\r\n  marginBottom: \"4px\"\r\n};\r\n\r\nconst BoardList = ({ boards, user, addBoard }) => {\r\n  useEffect(() => {\r\n    axios.get(\"boards\", ).then(res => {\r\n      res.data.map(board => {\r\n        addBoard(board._id, board.owner, board.title, board.isPrivate, board.isActive)\r\n      });\r\n    });\r\n  }, [user]);\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <p style={headerStyle}>\r\n          <Icon type=\"user\" /> Personal Boards\r\n        </p>\r\n      </div>\r\n      <div style={buttonContainerStyle}>\r\n        {Object.values(boards).map((board, i) => (\r\n          <div style={buttonStyle} key={i + board.id}>\r\n            <BoardButton key={board.id} {...board} />\r\n          </div>\r\n        ))}\r\n        <div style={buttonStyle}>\r\n          <AddBoardButton />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  boards: state.boards,\r\n  user: state.user,\r\n});\r\n\r\nconst mapDispatch = { addBoard };\r\n\r\nexport default connect(mapStateToProps, mapDispatch)(BoardList);\r\n","import React from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Board from \"../boards/Board\";\r\nimport BoardList from \"../boards/BoardList\";\r\n\r\nconst LoggedInRouter = () => {\r\n  return (\r\n    <main>\r\n      <Switch>\r\n        <Route\r\n          exact\r\n          path=\"/user/boards/:id\"\r\n          render={props => <Board id={props.match.params.id} />}\r\n        />\r\n        <Route exact path=\"/user/boards\" render={() => <BoardList />} />\r\n        <Route path=\"/\" render={() => <Redirect to=\"/user/boards\" />} />\r\n      </Switch>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default LoggedInRouter;\r\n","import React from \"react\";\r\nimport { Form, Icon, Input, Button } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst formStyle = {\r\n  borderRadius: \"3px\",\r\n  backgroundColor: \"white\",\r\n  minWidth: \"250px\",\r\n  width: \"20vw\",\r\n  margin: \"auto\", \r\n  marginTop: \"20vh\",\r\n  padding: \"4px 8px\"\r\n};\r\n\r\nconst LoginFormComponent = ({ onSubmit, form }) => {\r\n  const { getFieldDecorator } = form;\r\n\r\n  return (\r\n    <Form onSubmit={onSubmit} className=\"login-form\" style={formStyle}>\r\n      <Form.Item>\r\n        <h1\r\n          style={{ textAlign: \"center\", marginTop: \"4px\", marginBottom: \"0px\" }}\r\n        >\r\n          Log in to Trelloc\r\n        </h1>\r\n      </Form.Item>\r\n      <Form.Item>\r\n        {getFieldDecorator(\"email\", {\r\n          rules: [{ required: true, message: \"Please input your email!\" }]\r\n        })(\r\n          <Input\r\n            prefix={<Icon type=\"mail\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n            placeholder=\"Email\"\r\n          />\r\n        )}\r\n      </Form.Item>\r\n      <Form.Item>\r\n        {getFieldDecorator(\"password\", {\r\n          rules: [{ required: true, message: \"Please input your password!\" }]\r\n        })(\r\n          <Input\r\n            prefix={<Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n          />\r\n        )}\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Link to={\"/user/forgotpass/\"} style={{ marginRight: \"4px\" }}>\r\n          Forgot password\r\n        </Link>\r\n        <Link to={\"/user/register/\"} style={{ marginLeft: \"4px\" }}>\r\n          Register\r\n        </Link>\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n          Log in\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst LoginForm = Form.create({ name: \"login_form\" })(LoginFormComponent);\r\n\r\nexport default LoginForm;\r\n","import React, { useState, useCallback } from \"react\";\r\nimport LoginForm from \"./LoginForm\";\r\nimport { connect } from \"react-redux\";\r\nimport { addUser } from \"./userSlice\";\r\nimport axios from \"axios\";\r\nimport Cookies from \"universal-cookie\"\r\n\r\nconst LoginFormWrapper = ({ addUser }) => {\r\n  const [formRef, setFormRef] = useState(null);\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    formRef.validateFields((err, values) => {\r\n      if (err) {\r\n        return;\r\n      }\r\n      else {\r\n        const data = {\r\n          email: values.email,\r\n          password: values.password\r\n        }\r\n        \r\n        axios\r\n        .post(\"users/login\", data)\r\n        .then(res => {\r\n          axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + res.data.token;\r\n          addUser(res.data.user.username, res.data.user.email, res.data.token);\r\n          const cookies = new Cookies();\r\n          cookies.set('trelloc token', res.data.token, { path: \"/\" });\r\n        })\r\n        .catch(err => {\r\n          console.log(\"Login error!\");\r\n        })\r\n        formRef.resetFields();\r\n      }\r\n    });\r\n  };\r\n\r\n  const saveFormRef = useCallback(node => {\r\n    if (node !== null) {\r\n      setFormRef(node);\r\n    }\r\n  }, []);\r\n\r\n  return <LoginForm ref={saveFormRef} onSubmit={handleSubmit} />;\r\n};\r\n\r\nconst mapDispatch = { addUser };\r\n\r\nexport default connect(null, mapDispatch)(LoginFormWrapper);\r\n","import React from \"react\";\r\nimport { Form, Icon, Input, Button } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst formStyle = {\r\n  borderRadius: \"3px\",\r\n  backgroundColor: \"white\",\r\n  minWidth: \"250px\",\r\n  width: \"20vw\",\r\n  margin: \"auto\",\r\n  marginTop: \"20vh\",\r\n  padding: \"4px 8px\"\r\n};\r\n\r\nconst inputStyle = {\r\n  marginBottom: \"4px\",\r\n  marginTop: \"4px\"\r\n}\r\n\r\nconst RegistrationFormComponent = ({ onSubmit, form }) => {\r\n  const { getFieldDecorator } = form;\r\n\r\n  const compareToFirstPassword = (rule, value, callback) => {\r\n    if (value && value !== form.getFieldValue(\"password\")) {\r\n      callback(\"Passwords must match!\");\r\n    } else {\r\n      callback();\r\n    }\r\n  };\r\n\r\n  const validateToNextPassword = (rule, value, callback) => {\r\n    if (value) {\r\n      form.validateFields([\"confirm\"], { force: true });\r\n    }\r\n    callback();\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={onSubmit} className=\"login-form\" style={formStyle}>\r\n      <Form.Item>\r\n        <h1\r\n          style={{ textAlign: \"center\", marginTop: \"4px\", marginBottom: \"0px\" }}\r\n        >\r\n          Register for a Trelloc Account\r\n        </h1>\r\n      </Form.Item>\r\n      <Form.Item style={inputStyle}>\r\n        {getFieldDecorator(\"username\", {\r\n          rules: [{ required: true, message: \"Please input your username!\" }]\r\n        })(\r\n          <Input\r\n            prefix={<Icon type=\"user\" style={{ color: \"rgba(0, 0, 0, .25\" }} />}\r\n            placeholder=\"Username\"\r\n          />\r\n        )}\r\n      </Form.Item>\r\n      <Form.Item style={inputStyle}>\r\n        {getFieldDecorator(\"email\", {\r\n          rules: [\r\n            { type: \"email\", message: \"Please input a valid email!\" },\r\n            { required: true, message: \"Please input your email!\" }\r\n          ]\r\n        })(\r\n          <Input\r\n            prefix={<Icon type=\"mail\" style={{ color: \"rgba(0, 0, 0, .25\" }} />}\r\n            placeholder=\"Email\"\r\n          />\r\n        )}\r\n      </Form.Item>\r\n      <Form.Item style={inputStyle}>\r\n        {getFieldDecorator(\"password\", {\r\n          rules: [\r\n            { required: true, message: \"Please input your password!\" },\r\n            { validator: validateToNextPassword }\r\n          ]\r\n        })(\r\n          <Input\r\n            prefix={<Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n          />\r\n        )}\r\n      </Form.Item>\r\n      <Form.Item style={inputStyle}>\r\n        {getFieldDecorator(\"confirm password\", {\r\n          rules: [\r\n            { required: true, message: \"Please confirm your password!\" },\r\n            {\r\n              validator: compareToFirstPassword\r\n            }\r\n          ]\r\n        })(\r\n          <Input\r\n            prefix={<Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n            type=\"password\"\r\n            placeholder=\"Confirm password\"\r\n          />\r\n        )}\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n          Register\r\n        </Button>\r\n        <Link to={\"/user/login\"} style={{marginLeft: \"8px\"}}> or Log in</Link>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst RegistrationForm = Form.create({ name: \"registration_form\" })(\r\n  RegistrationFormComponent\r\n);\r\n\r\nexport default RegistrationForm;\r\n","import React, { useState, useCallback } from \"react\";\r\nimport RegistrationForm from \"./RegistrationForm\";\r\nimport { connect } from \"react-redux\";\r\nimport { addUser } from \"./userSlice\";\r\nimport axios from \"axios\";\r\nimport Cookies from \"universal-cookie\";\r\n\r\nconst RegistrationFormWrapper = ({ addUser }) => {\r\n  const [formRef, setFormRef] = useState(null);\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    formRef.validateFields((err, values) => {\r\n      if (err) {\r\n        return;\r\n      } else {\r\n        const data = {\r\n          username: values.username,\r\n          email: values.email,\r\n          password: values.password\r\n        };\r\n\r\n        axios\r\n          .post(\"users/\", data)\r\n          .then(res => {\r\n            addUser(\r\n              res.data.user.username,\r\n              res.data.user.email,\r\n              res.data.token\r\n            );\r\n            const cookies = new Cookies();\r\n            cookies.set(\"trelloc token\", res.data.token, { path: \"/\" });\r\n            console.log(cookies.get(\"trelloc token\"));\r\n          })\r\n          .catch(err => {\r\n            console.log(\"Registration error!\");\r\n          });\r\n        console.log(\"Received values of form: \", values);\r\n        formRef.resetFields();\r\n      }\r\n    });\r\n  };\r\n\r\n  const saveFormRef = useCallback(node => {\r\n    if (node !== null) {\r\n      setFormRef(node);\r\n    }\r\n  }, []);\r\n\r\n  return <RegistrationForm ref={saveFormRef} onSubmit={handleSubmit} />;\r\n};\r\n\r\nconst mapDispatch = { addUser };\r\n\r\nexport default connect(null, mapDispatch)(RegistrationFormWrapper);\r\n","import React from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport LoginFormWrapper from \"../user/LoginFormWrapper\"\r\nimport RegistrationFormWrapper from \"../user/RegistrationFormWrapper\"\r\n\r\nconst LoggedOutRouter = () => {\r\n  return (\r\n    <main>\r\n      <Switch>\r\n        <Route exact path=\"/user/login\" render={() => <LoginFormWrapper/>}/>\r\n        <Route exact path=\"/user/register\" render={() => <RegistrationFormWrapper/>}/>\r\n        <Route path=\"/\" render={() => <RegistrationFormWrapper/>}/>\r\n      </Switch>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default LoggedOutRouter;\r\n","export const isLoggedIn = (state) => {\r\n    return state[0] && state[0].token ? true : false;\r\n}\r\n\r\nexport const getAuthToken = (state) => {\r\n    return state[0] ? state[0].token : null;\r\n}","import React, { useEffect } from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport Header from \"../features/header/Header\";\r\nimport { Layout } from \"antd\";\r\nimport LoggedInRouter from \"../features/router/LoggedInRouter\";\r\nimport LoggedOutRouter from \"../features/router/LoggedOutRouter\";\r\nimport { isLoggedIn, getAuthToken } from \"../selectors/UserSelectors\";\r\nimport { connect } from \"react-redux\";\r\nimport { addUser } from \"../features/user/userSlice\";\r\nimport axios from \"axios\";\r\nimport Cookies from \"universal-cookie\";\r\n\r\nconst layoutStyle = {\r\n  backgroundColor: \"black\",\r\n  minHeight: \"100vh\",\r\n  fontFamily: \"Helvetica\",\r\n  fontSize: \"14px\",\r\n  fontWeight: 400,\r\n  lineHeight: \"20px\"\r\n};\r\n\r\nconst contentStyle = {\r\n  padding: \"4px\",\r\n  backgroundColor: \"black\",\r\n  height: \"100%\"\r\n};\r\n\r\nfunction App({ user, addUser }) {\r\n  useEffect(() => {\r\n    const cookies = new Cookies();\r\n    const token = cookies.get(\"trelloc token\");\r\n\r\n    axios.defaults.baseURL = \"https://warm-sea-05824.herokuapp.com/api/\";\r\n    axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + token;\r\n    axios.defaults.headers.post[\"Content-Type\"] =\r\n      \"application/x-www-form-urlencoded\";\r\n\r\n    if (token) {\r\n      axios.get(\"users/me\").then(res => {\r\n        addUser(res.data.username, res.data.email, token);\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Layout style={layoutStyle}>\r\n        <Header />\r\n        <Layout.Content style={contentStyle}>\r\n          {isLoggedIn(user) ? <LoggedInRouter /> : <LoggedOutRouter />}\r\n        </Layout.Content>\r\n      </Layout>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  user: state.user\r\n});\r\n\r\nconst mapDispatch = { addUser };\r\n\r\nexport default connect(mapStateToProps, mapDispatch)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport cardsReducer from \"../features/cards/cardsSlice\";\r\nimport listsReducer from \"../features/lists/listsSlice\";\r\nimport boardsReducer from \"../features/boards/boardsSlice\";\r\nimport userReducer from \"../features/user/userSlice\";\r\n\r\nexport default combineReducers({\r\n  cards: cardsReducer,\r\n  lists: listsReducer,\r\n  boards: boardsReducer,\r\n  user: userReducer\r\n});\r\n","import React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport { configureStore } from \"redux-starter-kit\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport \"./css/index.css\";\r\nimport App from \"./components/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer\r\n});\r\n\r\nrender(\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}