{"version":3,"sources":["features/header/Header.js","features/cards/CardList.js","features/cards/cardsSlice.js","features/cards/AddCardButton.js","features/menus/ListOptionsMenuMain.js","features/lists/listsSlice.js","selectors/BoardSelectors.js","features/menus/MoveListMenu.js","features/menus/ListOptionsMenu.js","features/lists/ListOptionsDropDown.js","features/lists/List.js","features/lists/AddListButton.js","features/lists/ListList.js","features/boards/Board.js","features/boards/boardsSlice.js","features/boards/AddBoardButton.js","features/boards/BoardButton.js","features/boards/BoardList.js","features/router/Router.js","components/App.js","serviceWorker.js","reducers/index.js","index.js"],"names":["headerStyle","backgroundImage","backgroundRepeat","backgroundPosition","backgroundSize","height","width","display","justifyContent","flexGrow","padding","lineHeight","maxHeight","leftButtonContainer","rightButtonContainer","buttonStyle","position","marginRight","Header","style","to","icon","shape","cardStyle","borderRadius","zIndex","boxShadow","marginBottom","minHeight","maxWidth","bodyStyle","CardList","cards","Object","values","sort","a","b","map","card","key","id","title","nextCardId","cardsSlice","createSlice","name","initialState","reducers","addCard","reducer","state","action","payload","listId","description","filter","length","prepare","deleteCard","moveCard","moveCards","keys","forEach","swapListId","actions","inputStyle","buttonContainer","flexDirection","alignContent","submitButtonStyle","backgroundColor","color","closeButtonStyle","borderColor","textAlign","minWidth","addButtonStyle","mapDispatch","connect","isVisible","setIsVisible","fromDropDown","useState","cardTitle","setCardTitle","layout","onSubmit","e","preventDefault","trim","Item","TextArea","value","onChange","target","type","placeholder","autoFocus","autoSize","htmlType","block","ghost","onClick","menuStyle","overflow","dividerStyle","margin","headerTitle","textOverflow","whiteSpace","menuGroupStyle","overflowX","overflowY","menuItemStyle","cursor","fontWeight","textDecoration","ListOptionsMenuMain","setShowingMoveList","handleClick","Divider","ItemGroup","listsSlice","addList","boardId","list","deleteList","moveList","newPosition","newBoardId","console","log","orderedLists","push","i","listArray","getActiveBoard","find","isActive","getTitle","getId","getPosition","Option","Select","alignItems","selectStyle","left","border","labelStyle","fontSize","boards","lists","selectedBoard","setSelectedBoard","selectedPosition","setSelectedPosition","defaultValue","ListOptionsMenu","showingMoveList","ellipsisStyle","float","ListOptionsDropDown","overlay","trigger","placement","listWrapper","boxSizing","verticalAlign","marginLeft","listContent","listHeader","flex","justify","List","wrapperRef","useRef","isTopVisible","setIsTopVisible","isBotVisible","setIsBotVisible","useEffect","document","addEventListener","handleClickOutside","removeEventListener","event","current","contains","ref","formStyle","showingInput","setShowingInput","listTitle","setListTitle","parseInt","scrollingWrapper","flexWrap","nextBoardId","boardsSlice","addBoard","isPrivate","deleteBoard","setActive","boardTitle","setBoardTitle","wordWrap","buttonContainerStyle","board","Router","exact","path","render","props","match","params","layoutStyle","fontFamily","contentStyle","App","className","Content","Boolean","window","location","hostname","combineReducers","cardsReducer","listsReducer","boardsReducer","store","configureStore","rootReducer","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.602440c9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Layout, Button } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst headerStyle = {\r\n  backgroundImage:\r\n    \"url(https://a.trellocdn.com/prgb/dist/images/header-logo-2x.01ef898811a879595cea.png)\",\r\n  backgroundRepeat: \"no-repeat\",\r\n  backgroundPosition: \"center center\",\r\n  backgroundSize: \"80px 30px\",\r\n  height: \"40px\",\r\n  width: \"100%\",\r\n  display: \"flex\",\r\n  justifyContent: \"flex-start\",\r\n  flexGrow: 1,\r\n  padding: \"4px\",\r\n  lineHeight: \"0\",\r\n  maxHeight: \"40px\"\r\n};\r\n\r\nconst leftButtonContainer = {\r\n  display: \"flex\",\r\n  justifyContent: \"flex-start\",\r\n  flexGrow: 1\r\n};\r\n\r\nconst rightButtonContainer = {\r\n  display: \"flex\",\r\n  justifyContent: \"flex-end\",\r\n  flexGrow: 1\r\n};\r\n\r\nconst buttonStyle = {\r\n  display: \"inline-block\",\r\n  position: \"relative\",\r\n  marginRight: \"4px\",\r\n  width: \"32px\",\r\n  height: \"32px\",\r\n  padding: 0\r\n};\r\n\r\nconst Header = () => {\r\n  return (\r\n    <Layout.Header style={headerStyle}>\r\n      <div style={leftButtonContainer}>\r\n        <Link to=\"/\">\r\n          <Button style={buttonStyle} icon=\"home\" />\r\n        </Link>\r\n        <Button style={buttonStyle} icon=\"file-search\" />\r\n        <Button style={buttonStyle} icon=\"search\" />\r\n      </div>\r\n      <div style={rightButtonContainer}>\r\n        <Button style={buttonStyle} icon=\"plus\" />\r\n        <Button style={buttonStyle} icon=\"bell\" />\r\n        <Button style={buttonStyle} shape=\"circle\" icon=\"codepen\" />\r\n      </div>\r\n    </Layout.Header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Card } from \"antd\";\r\n\r\nconst cardStyle = {\r\n  borderRadius: \"3px\",\r\n  zIndex: 10,\r\n  boxShadow: \"0 1px 0 rgba(9, 30, 66, .25)\",\r\n  marginBottom: \"8px\",\r\n  minHeight: \"20px\",\r\n  maxWidth: \"300px\",\r\n  padding: \"0px !important\"\r\n};\r\n\r\nconst bodyStyle = {\r\n  padding: \"6px 8px 2px\"\r\n};\r\n\r\nconst CardList = ({ cards }) => (\r\n  <div>\r\n    {Object.values(cards).sort(function(a, b){return a.position - b.position}).map(card => (\r\n      <Card key={card.id} style={cardStyle} bodyStyle={bodyStyle}>\r\n        {card.title}\r\n      </Card>\r\n    ))}\r\n  </div>\r\n);\r\n\r\nexport default CardList;\r\n","import { createSlice } from \"redux-starter-kit\";\r\n\r\nlet nextCardId = 0;\r\n\r\nconst cardsSlice = createSlice({\r\n  name: \"cards\",\r\n  initialState: {},\r\n  reducers: {\r\n    addCard: {\r\n      reducer(state, action) {\r\n        const { id, listId, title, description } = action.payload;\r\n\r\n        let position = Object.values(state).filter(\r\n          card => card.listId === listId\r\n        ).length;\r\n\r\n        state[id] = { id, listId, title, description, position };\r\n      },\r\n      prepare(listId, title, description) {\r\n        return {\r\n          payload: { listId, title, description, id: nextCardId++ }\r\n        };\r\n      }\r\n    },\r\n    deleteCard: {\r\n      reducer(state, action) {\r\n        delete state[action.payload.id];\r\n      }\r\n    },\r\n    moveCard: {\r\n      reducer(state, action) {\r\n        state[action.payload.id].listId = action.payload.listId;\r\n      }\r\n    },\r\n    moveCards: {\r\n      reducer(state, action) {\r\n        Object.keys(state).forEach(key => {\r\n          if (state[key].listId === action.payload.listId)\r\n            state[key].listId = action.payload.swapListId;\r\n        });\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nexport const { addCard, deleteCard, moveCard, moveCards } = cardsSlice.actions;\r\n\r\nexport default cardsSlice.reducer;\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addCard } from \"./cardsSlice\";\r\nimport { Form, Input, Button } from \"antd\";\r\n\r\nconst inputStyle = {\r\n  maxHeight: \"162px\",\r\n  minHeight: \"54px\"\r\n};\r\n\r\nconst buttonContainer = {\r\n  display: \"flex\",\r\n  flexDirection: \"row\",\r\n  justifyContent: \"flex-start\",\r\n  alignContent: \"center\"\r\n};\r\n\r\nconst submitButtonStyle = {\r\n  minHeight: \"38px\",\r\n  maxHeight: \"38px\",\r\n  backgroundColor: \"#5aac44\",\r\n  color: \"white\"\r\n};\r\n\r\nconst closeButtonStyle = {\r\n  borderColor: \"#ebecf0\",\r\n  color: \"#5e6c84\",\r\n  textAlign: \"left\",\r\n  boxShadow: \"none\",\r\n  height: \"38px\",\r\n  width: \"38px\",\r\n  minWidth: \"38px\"\r\n};\r\n\r\nconst addButtonStyle = {\r\n  borderColor: \"#ebecf0\",\r\n  color: \"#5e6c84\",\r\n  textAlign: \"left\",\r\n  boxShadow: \"none\"\r\n};\r\n\r\nconst mapDispatch = { addCard };\r\n\r\nconst AddCardButton = ({\r\n  addCard,\r\n  listId,\r\n  isVisible,\r\n  setIsVisible,\r\n  fromDropDown\r\n}) => {\r\n  const [cardTitle, setCardTitle] = useState(\"\");\r\n\r\n  const onChange = e => setCardTitle(e.target.value);\r\n\r\n  if (isVisible)\r\n    return (\r\n      <Form\r\n        layout=\"inline\"\r\n        onSubmit={e => {\r\n          e.preventDefault();\r\n          if (!cardTitle.trim()) return;\r\n          addCard(listId, cardTitle, \"\");\r\n          setCardTitle(\"\");\r\n          setIsVisible(false);\r\n        }}\r\n      >\r\n        <Form.Item style={{ width: \"100%\" }}>\r\n          <Input.TextArea\r\n            style={inputStyle}\r\n            value={cardTitle}\r\n            onChange={onChange}\r\n            type=\"text\"\r\n            placeholder=\"Enter a title for this card...\"\r\n            autoFocus={true}\r\n            autoSize={true}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <div style={buttonContainer}>\r\n            <Button htmlType=\"submit\" style={submitButtonStyle} block>\r\n              Add Card\r\n            </Button>\r\n            <Button\r\n              ghost={true}\r\n              onClick={() => {\r\n                setIsVisible(false);\r\n                setCardTitle(\"\");\r\n              }}\r\n              style={closeButtonStyle}\r\n              icon=\"close\"\r\n            />\r\n          </div>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  else if (!isVisible && !fromDropDown)\r\n    return (\r\n      <Button\r\n        block\r\n        ghost={true}\r\n        onClick={() => {\r\n          setIsVisible(true);\r\n        }}\r\n        style={addButtonStyle}\r\n        icon=\"plus\"\r\n      >\r\n        Add another card\r\n      </Button>\r\n    );\r\n  else return null;\r\n};\r\n\r\nexport default connect(null, mapDispatch)(AddCardButton);\r\n","import React from \"react\";\r\nimport { Menu } from \"antd\";\r\n\r\nconst menuStyle = {\r\n    width: \"304px\",\r\n    overflow: \"hidden\"\r\n  };\r\n  \r\n  const dividerStyle = {\r\n    margin: \"4px 0\"\r\n  };\r\n  \r\n  const headerStyle = {\r\n    display: \"block\",\r\n    textAlign: \"center\",\r\n    height: \"40px\",\r\n    color: \"#172b4d\"\r\n  };\r\n  \r\n  const headerTitle = {\r\n    display: \"block\",\r\n    lineHeight: \"40px\",\r\n    margin: \"0 12px\",\r\n    overflow: \"hidden\",\r\n    padding: \"0 32px\",\r\n    textOverflow: \"ellipsis\",\r\n    whiteSpace: \"nowrap\"\r\n  };\r\n  \r\n  const menuGroupStyle = {\r\n    overflowX: \"hidden\",\r\n    overflowY: \"auto\",\r\n    padding: \"0 12px 12px\"\r\n  };\r\n  \r\n  const menuItemStyle = {\r\n    cursor: \"pointer\",\r\n    display: \"block\",\r\n    fontWeight: \"400\",\r\n    padding: \"6px 12px\",\r\n    margin: \"0 -12px\",\r\n    textDecoration: \"none\",\r\n    color: \"#172b4d\"\r\n  };\r\n\r\nconst handleClick = (e, setIsVisible, setShowingMoveList) => {\r\n    if (e.key === \"1\") setIsVisible(true);\r\n    else if (e.key === \"3\") setShowingMoveList(true);\r\n  };\r\n\r\nconst ListOptionsMenuMain = ({ setIsVisible, setShowingMoveList }) => {\r\n    return (\r\n        <Menu\r\n          onClick={e => handleClick(e, setIsVisible, setShowingMoveList)}\r\n          style={menuStyle}\r\n        >\r\n          <Menu.Item style={headerStyle}>\r\n            <span style={headerTitle}>List Actions</span>\r\n          </Menu.Item>\r\n          <Menu.Divider style={dividerStyle} />\r\n          <Menu.ItemGroup style={menuGroupStyle}>\r\n            <Menu.Item key=\"1\" style={menuItemStyle}>\r\n              Add Card...\r\n            </Menu.Item>\r\n            <Menu.Item key=\"2\" style={menuItemStyle}>\r\n              Copy List...\r\n            </Menu.Item>\r\n            <Menu.Item key=\"3\" style={menuItemStyle}>\r\n              Move List...\r\n            </Menu.Item>\r\n            <Menu.Item key=\"4\" style={menuItemStyle}>\r\n              Watch\r\n            </Menu.Item>\r\n            <Menu.Divider style={dividerStyle} />\r\n            <Menu.Item key=\"5\" style={menuItemStyle}>\r\n              Sort By...\r\n            </Menu.Item>\r\n            <Menu.Divider style={dividerStyle} />\r\n            <Menu.Item key=\"6\" style={menuItemStyle}>\r\n              Move All Cards in This List...\r\n            </Menu.Item>\r\n            <Menu.Item key=\"7\" style={menuItemStyle}>\r\n              Archive All Cards in This List...\r\n            </Menu.Item>\r\n            <Menu.Divider style={dividerStyle} />\r\n            <Menu.Item key=\"8\" style={menuItemStyle}>\r\n              Archive This List\r\n            </Menu.Item>\r\n          </Menu.ItemGroup>\r\n        </Menu>\r\n    )\r\n}\r\n\r\nexport default ListOptionsMenuMain;","import { createSlice } from \"redux-starter-kit\";\r\n\r\nlet nextCardId = 0;\r\n\r\nconst listsSlice = createSlice({\r\n  name: \"lists\",\r\n  initialState: {},\r\n  reducers: {\r\n    addList: {\r\n      reducer(state, action) {\r\n        const { id, boardId, title } = action.payload;\r\n\r\n        let position = Object.values(state).filter(\r\n          list => list.boardId === boardId\r\n        ).length;\r\n\r\n        state[id] = { id, boardId, title, position };\r\n      },\r\n      prepare(boardId, title) {\r\n        return { payload: { boardId, title, id: nextCardId++ } };\r\n      }\r\n    },\r\n    deleteList: {\r\n      reducer(state, action) {\r\n        delete state[action.payload.id];\r\n      }\r\n    },\r\n    moveList: {\r\n      reducer(state, action) {\r\n        const { listId, newPosition, newBoardId } = action.payload;\r\n        console.log(newPosition);\r\n\r\n        let orderedLists = [];\r\n        Object.keys(state).map(key =>\r\n          state[key].boardId === newBoardId\r\n            ? orderedLists.push([state[key], key])\r\n            : null\r\n        );\r\n        orderedLists.sort((a, b) => a[0].position - b[0].position);\r\n\r\n        if (state[listId].boardId != newBoardId) {\r\n          state[listId].position = orderedLists.length;\r\n          state[listId].boardId = newBoardId;\r\n          orderedLists.push([state[listId], listId]);\r\n        }\r\n\r\n        if (state[listId].position < orderedLists.length - 1)\r\n          for (let i = state[listId].position + 1; i <= newPosition; i++)\r\n            orderedLists[i][0].position -= 1;\r\n        else\r\n          for (let i = newPosition; i < state[listId].position; i++)\r\n            orderedLists[i][0].position += 1;\r\n        state[listId].position = newPosition;\r\n\r\n        orderedLists.forEach(\r\n          listArray => (state[listArray[1]].position = listArray[0].position)\r\n        );\r\n      },\r\n      prepare(listId, newPosition, newBoardId) {\r\n        return { payload: { listId, newPosition, newBoardId } };\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nexport const { addList, deleteList, moveList } = listsSlice.actions;\r\n\r\nexport default listsSlice.reducer;\r\n","export const getActiveBoard = (state) => { \r\n   return state[Object.keys(state).find(key => state[key].isActive === true)];\r\n}\r\n\r\nexport const getObjectById = (state, id) => { \r\n  return Object.keys(state).find(key => state[key].id === id);\r\n}\r\n\r\nexport const getObjectIds = (state) => {\r\n  return state.map(item => item.id);\r\n}\r\n\r\nexport const getTitle = (state) => { \r\n  return state.title;\r\n}\r\n\r\nexport const getId = (state) => {\r\n  return state.id;\r\n}\r\n\r\nexport const getPosition = (state) => {\r\n  return state.position;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Menu, Button, Select } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { moveList } from \"../lists/listsSlice\";\r\nimport { getActiveBoard, getTitle, getId, getPosition } from \"../../selectors/BoardSelectors\"\r\n\r\nconst { Option } = Select;\r\n\r\nconst menuStyle = {\r\n  width: \"304px\",\r\n  overflow: \"hidden\",\r\n  height: \"auto\"\r\n};\r\n\r\nconst dividerStyle = {\r\n  margin: \"4px 0\"\r\n};\r\n\r\nconst headerStyle = {\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  textAlign: \"center\",\r\n  justifyContent: \"space-between\",\r\n  height: \"40px\",\r\n  color: \"#172b4d\"\r\n};\r\n\r\nconst headerTitle = {\r\n  display: \"block\",\r\n  lineHeight: \"40px\",\r\n  margin: \"0 12px\",\r\n  overflow: \"hidden\",\r\n  padding: \"0 32px\",\r\n  textOverflow: \"ellipsis\",\r\n  whiteSpace: \"nowrap\"\r\n};\r\n\r\nconst buttonStyle = {\r\n  borderColor: \"transparent\",\r\n  color: \"#5e6c84\",\r\n  textAlign: \"left\",\r\n  boxShadow: \"none\",\r\n  display: \"block\",\r\n  height: \"auto\",\r\n  padding: \"10px 8px 10px 12px\"\r\n};\r\n\r\nconst selectStyle = {\r\n  left: 0,\r\n  margin: 0,\r\n  border: \"none\",\r\n  width: \"100%\"\r\n};\r\n\r\nconst labelStyle = {\r\n  height: \"8px\",\r\n  margin: \"8px\",\r\n  padding: \"4px\",\r\n  fontSize: \"14px\",\r\n  fontWeight: 600\r\n};\r\n\r\nconst handleClick = (e, setIsVisible, setShowingMoveList) => {\r\n  if (e.key === \"1\") setIsVisible(true);\r\n  else if (e.key === \"3\") setShowingMoveList(true);\r\n};\r\n\r\nconst MoveListMenu = ({\r\n  setIsVisible,\r\n  setShowingMoveList,\r\n  listId,\r\n  boards,\r\n  lists,\r\n  moveList\r\n}) => {\r\n  const [selectedBoard, setSelectedBoard] = useState(getId(getActiveBoard(boards)));\r\n  const [selectedPosition, setSelectedPosition] = useState(getPosition(lists[listId]));\r\n\r\n  return (\r\n    <Menu\r\n      onClick={e => handleClick(e, setIsVisible, setShowingMoveList)}\r\n      style={menuStyle}\r\n    >\r\n      <Menu.Item style={headerStyle}>\r\n        <Button\r\n          onClick={() => setShowingMoveList(false)}\r\n          icon=\"left\"\r\n          style={buttonStyle}\r\n        />\r\n        <span style={headerTitle}>Move List</span>\r\n        <Button icon=\"close\" style={buttonStyle}/>\r\n      </Menu.Item>\r\n      <Menu.Divider style={dividerStyle} />\r\n      <div>\r\n        <div style={labelStyle}>Board: </div>\r\n        <Select\r\n          defaultValue={getTitle(getActiveBoard(boards))}\r\n          style={selectStyle}\r\n          onChange={value => setSelectedBoard(value)}\r\n        >\r\n          {Object.keys(boards).map(key => (\r\n            <Option value={getId(boards[key])} key={key}>\r\n              {getTitle(boards[key])}\r\n            </Option>\r\n          ))}\r\n        </Select>\r\n      </div>\r\n      <div style={labelStyle}>Position: </div>\r\n      <Select\r\n        defaultValue={listId}\r\n        style={selectStyle}\r\n        onChange={value => setSelectedPosition(value)}\r\n      >\r\n        {Object.keys(lists).map(key =>\r\n          lists[key].boardId == selectedBoard ? (\r\n            <Option value={getPosition(lists[key])} key={key}>\r\n              {getPosition(lists[key])}\r\n              {getPosition(lists[key]) === listId ? \" (current)\" : null}\r\n            </Option>\r\n          ) : null\r\n        )}\r\n      </Select>\r\n      <Menu.Item>\r\n        <Button\r\n          onClick={() => moveList(listId, selectedPosition, selectedBoard)}\r\n        >\r\n          Move\r\n        </Button>\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  boards: state.boards,\r\n  lists: state.lists\r\n});\r\n\r\nconst mapDispatch = { moveList };\r\n\r\nexport default connect(mapStateToProps, mapDispatch)(MoveListMenu);\r\n","import React from \"react\";\r\nimport ListOptionsMenuMain from \"./ListOptionsMenuMain\";\r\nimport MoveListMenu from \"./MoveListMenu\";\r\n\r\nconst ListOptionsMenu = ({\r\n  setIsVisible,\r\n  showingMoveList,\r\n  setShowingMoveList,\r\n  listId\r\n}) => {\r\n  if (showingMoveList)\r\n    return (\r\n      <MoveListMenu\r\n        setIsVisible={setIsVisible}\r\n        setShowingMoveList={setShowingMoveList}\r\n        listId={listId}\r\n      />\r\n    );\r\n  else\r\n    return (\r\n      <ListOptionsMenuMain\r\n        setIsVisible={setIsVisible}\r\n        setShowingMoveList={setShowingMoveList}\r\n      />\r\n    );\r\n};\r\n\r\nexport default ListOptionsMenu;\r\n","import React, { useState } from \"react\";\r\nimport { Dropdown, Icon } from \"antd\";\r\nimport ListOptionsMenu from \"../menus/ListOptionsMenu\";\r\n\r\nconst ellipsisStyle = {\r\n  borderColor: \"#ebecf0\",\r\n  color: \"#5e6c84\",\r\n  textAlign: \"left\",\r\n  boxShadow: \"none\",\r\n  float: \"right\"\r\n};\r\n\r\nconst ListOptionsDropDown = ({ setIsVisible, listId }) => {\r\n  const [showingMoveList, setShowingMoveList] = useState(false);\r\n\r\n  return (\r\n    <Dropdown\r\n      overlay={\r\n        <ListOptionsMenu\r\n          setIsVisible={setIsVisible}\r\n          showingMoveList={showingMoveList}\r\n          setShowingMoveList={setShowingMoveList}\r\n          listId={listId}\r\n        />\r\n      }\r\n      trigger={[\"click\"]}\r\n      placement=\"bottomRight\"\r\n    >\r\n      <Icon type=\"ellipsis\" style={ellipsisStyle} />\r\n    </Dropdown>\r\n  );\r\n};\r\n\r\nexport default ListOptionsDropDown;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport CardList from \"../cards/CardList\";\r\nimport AddCardButton from \"../cards/AddCardButton\";\r\nimport ListOptionsDropDown from \"./ListOptionsDropDown\";\r\nimport { Card } from \"antd\";\r\n\r\nconst listWrapper = {\r\n  width: \"272px\",\r\n  height: \"100%\",\r\n  margin: \"0 4px\",\r\n  boxSizing: \"border-box\",\r\n  display: \"inline-block\",\r\n  verticalAlign: \"top\"\r\n};\r\n\r\nconst cardStyle = {\r\n  width: \"272px\",\r\n  backgroundColor: \"#ebecf0\",\r\n  marginLeft: \"8px\",\r\n  borderRadius: \"3px\",\r\n  boxSizing: \"border-box\",\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  maxHeight: \"100%\",\r\n  overflowY: \"hidden\"\r\n};\r\n\r\nconst listContent = {};\r\n\r\nconst listHeader = {\r\n  flex: \"0 0 auto\",\r\n  padding: \"10px 8px\",\r\n  position: \"relative\",\r\n  minHeight: \"20px\",\r\n  fontWeight: 600\r\n};\r\n\r\nconst buttonStyle = {\r\n  minWidth: \"100%\",\r\n  position: \"relative\",\r\n  padding: \"4px 0px\",\r\n  display: \"flex\",\r\n  justify: \"space-between\"\r\n};\r\n\r\nconst ellipsisStyle = {\r\n  borderColor: \"#ebecf0\",\r\n  color: \"#5e6c84\",\r\n  textAlign: \"left\",\r\n  boxShadow: \"none\",\r\n  float: \"right\"\r\n};\r\n\r\nconst List = ({ id, title, cards }) => {\r\n  const wrapperRef = useRef(null);\r\n  const [isTopVisible, setIsTopVisible] = useState(false);\r\n  const [isBotVisible, setIsBotVisible] = useState(false);\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"mousedown\", handleClickOutside, false);\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClickOutside, false);\r\n    };\r\n  }, []);\r\n\r\n  const handleClickOutside = event => {\r\n    if (wrapperRef.current && !wrapperRef.current.contains(event.target)) {\r\n      setIsTopVisible(false);\r\n      setIsBotVisible(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={listWrapper} ref={wrapperRef}>\r\n      <Card style={cardStyle} bodyStyle={{ padding: \"0 4px\" }}>\r\n        <div style={listContent}>\r\n          <div style={listHeader}>\r\n            {title}{\" \"}\r\n            <ListOptionsDropDown\r\n              style={ellipsisStyle}\r\n              setIsVisible={setIsTopVisible}\r\n              listId={id}\r\n            />\r\n          </div>\r\n          <div style={buttonStyle}>\r\n            <AddCardButton\r\n              listId={id}\r\n              isVisible={isTopVisible}\r\n              setIsVisible={setIsTopVisible}\r\n              fromDropDown={true}\r\n            >\r\n              Add another card\r\n            </AddCardButton>\r\n          </div>\r\n          <div style={{ zIndex: 10, maxHeight: \"80vh\", overflowY: \"scroll\" }}>\r\n            <CardList cards={cards} />\r\n          </div>\r\n          <div style={buttonStyle}>\r\n            <AddCardButton\r\n              listId={id}\r\n              isVisible={isBotVisible}\r\n              setIsVisible={setIsBotVisible}\r\n              fromDropDown={false}\r\n            >\r\n              Add another card\r\n            </AddCardButton>\r\n          </div>\r\n        </div>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addList } from \"./listsSlice\";\r\nimport { Form, Input, Button } from \"antd\";\r\n\r\nconst buttonStyle = {\r\n  marginLeft: \"8px\",\r\n  minHeight: \"38px\",\r\n  maxHeight: \"38px\",\r\n  backgroundColor: \"hsla(0, 0%, 100%, .24)\",\r\n  color: \"white\",\r\n  borderColor: \"transparent\",\r\n  width: \"272px\",\r\n  display: \"flex\",\r\n  justifyContent: \"flex-start\",\r\n  maxWidth: \"272px\"\r\n};\r\n\r\nconst formStyle = {\r\n  marginLeft: \"8px\"\r\n};\r\n\r\nconst mapDispatch = { addList };\r\n\r\nconst AddListButton = ({ addList, boardId }) => {\r\n  const [showingInput, setShowingInput] = useState(false);\r\n  const [listTitle, setListTitle] = useState(\"\");\r\n\r\n  const onChange = e => setListTitle(e.target.value);\r\n\r\n  if (showingInput)\r\n    return (\r\n      <Form\r\n        layout=\"inline\"\r\n        onSubmit={e => {\r\n          e.preventDefault();\r\n          if (!listTitle.trim()) return;\r\n          addList(parseInt(boardId, 10), listTitle);\r\n          setListTitle(\"\");\r\n          setShowingInput(false);\r\n        }}\r\n        style={formStyle}\r\n      >\r\n        <Form.Item>\r\n          <Input\r\n            value={listTitle}\r\n            onChange={onChange}\r\n            type=\"text\"\r\n            placeholder=\"Enter a list title...\"\r\n            autoFocus={true}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button htmlType=\"submit\" style={buttonStyle}>\r\n            Add List\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  else\r\n    return (\r\n      <Button\r\n        onClick={() => setShowingInput(true)}\r\n        style={buttonStyle}\r\n        icon=\"plus\"\r\n      >\r\n        Add another list\r\n      </Button>\r\n    );\r\n};\r\n\r\nexport default connect(null, mapDispatch)(AddListButton);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport List from \"./List\";\r\nimport AddListButton from \"./AddListButton\";\r\n\r\nconst scrollingWrapper = {\r\n  display: \"flex\",\r\n  overflowX: \"auto\",\r\n  flexWrap: \"nowrap\"\r\n};\r\n\r\nconst ListList = ({ boardId, lists, cards }) => {\r\n  return (\r\n    <div style={scrollingWrapper}>\r\n      {lists\r\n        ? Object.values(lists).sort((a, b) => a.position - b.position).map((list, i) => (\r\n            <List\r\n              key={list.id}\r\n              {...list}\r\n              cards={Object.values(cards).filter(\r\n                card => parseInt(card.listId) === list.id\r\n              )}\r\n            />\r\n          ))\r\n        : null}\r\n      <AddListButton boardId={boardId} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  cards: state.cards\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(ListList);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport ListList from \"../lists/ListList\";\r\n\r\nconst Board = ({ id, lists }) => {\r\n  return (\r\n    <div>\r\n      <ListList\r\n        boardId={id}\r\n        lists={Object.values(lists).filter(\r\n          list => parseInt(list.boardId) === parseInt(id)\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  lists: state.lists\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(Board);\r\n","import { createSlice } from \"redux-starter-kit\";\r\n\r\nlet nextBoardId = 0;\r\n\r\nconst boardsSlice = createSlice({\r\n  name: \"boards\",\r\n  initialState: {},\r\n  reducers: {\r\n    addBoard: {\r\n      reducer(state, action) {\r\n        const { id, title, isPrivate, isActive } = action.payload;\r\n        state[id] = { id, title, isPrivate, isActive };\r\n      },\r\n      prepare(title, isPrivate, isActive) {\r\n        return { payload: { title, isPrivate, isActive, id: nextBoardId++ } };\r\n      }\r\n    },\r\n    deleteBoard: {\r\n      reducer(state, action) {\r\n        delete state[action.payload.id];\r\n      }\r\n    },\r\n    setActive: {\r\n      reducer(state, action) {\r\n        Object.keys(state).forEach(key => {\r\n          if (state[key].isActive === true) state[key].isActive = false;\r\n        });\r\n        state[action.payload.id].isActive = action.payload.isActive;\r\n      },\r\n      prepare(id, isActive) {\r\n        return { payload: { id, isActive } };\r\n      }\r\n    },\r\n  }\r\n});\r\n\r\nexport const {\r\n  addBoard,\r\n  deleteBoard,\r\n  setActive\r\n} = boardsSlice.actions;\r\n\r\nexport default boardsSlice.reducer;\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addBoard } from \"./boardsSlice\";\r\nimport { Form, Input, Button } from \"antd\";\r\n\r\nconst buttonStyle = {\r\n  marginRight: \"8px\",\r\n  marginBottom: \"8px\",\r\n  backgroundColor: \"#97a0af\",\r\n  height: \"80px\",\r\n  width: \"100%\",\r\n  fontSize: \"16px\",\r\n  fontWeight: 700,\r\n  color: \"white\",\r\n  borderColor: \"transparent\",\r\n};\r\n\r\nconst formStyle = {\r\n  marginLeft: \"8px\"\r\n};\r\n\r\nconst mapDispatch = { addBoard };\r\n\r\nconst AddBoardButton = ({ addBoard }) => {\r\n  const [showingInput, setShowingInput] = useState(false);\r\n  const [boardTitle, setBoardTitle] = useState(\"\");\r\n\r\n  const onChange = e => setBoardTitle(e.target.value);\r\n\r\n  if (showingInput)\r\n    return (\r\n      <Form\r\n        layout=\"inline\"\r\n        onSubmit={e => {\r\n          e.preventDefault();\r\n          if (!boardTitle.trim()) return;\r\n          addBoard(boardTitle, true, false);\r\n          setBoardTitle(\"\");\r\n          setShowingInput(false);\r\n        }}\r\n        style={formStyle}\r\n      >\r\n        <Form.Item>\r\n          <Input\r\n            value={boardTitle}\r\n            onChange={onChange}\r\n            type=\"text\"\r\n            placeholder=\"Enter a board title...\"\r\n            autoFocus={true}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button htmlType=\"submit\" style={buttonStyle}>\r\n            Add Board\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  else\r\n    return (\r\n      <Button onClick={() => setShowingInput(true)} style={buttonStyle}>\r\n        Create new board\r\n      </Button>\r\n    );\r\n};\r\n\r\nexport default connect(null, mapDispatch)(AddBoardButton);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setActive } from \"./boardsSlice\";\r\nimport { Button } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst buttonStyle = {\r\n    backgroundColor: \"rgb(81, 152, 57)\",\r\n    height: \"80px\",\r\n    width: \"100%\",\r\n    fontSize: \"16px\",\r\n    fontWeight: 700,\r\n    color: \"white\",\r\n    display: \"inline-block\",\r\n    overflow: \"hidden\",\r\n    wordWrap: \"break-word\",\r\n    flex: \"0 0 auto\",\r\n    borderColor: \"transparent\",\r\n}\r\n\r\nconst mapDispatch = { setActive };\r\n\r\nconst BoardButton = ({ id, title, isPrivate, setActive }) => {\r\n  return (\r\n    <Link to={\"/user/boards/\" + id}>\r\n      <Button style={buttonStyle} onClick={() => setActive(id, true)}>{title}</Button>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default connect(null, mapDispatch)(BoardButton);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Icon } from \"antd\";\r\nimport AddBoardButton from \"./AddBoardButton\";\r\nimport BoardButton from \"./BoardButton\";\r\n\r\nconst headerStyle = {\r\n  color: \"white\",\r\n  fontSize: \"24px\",\r\n  lineHeight: \"20px\",\r\n  fontWeight: 400,\r\n}\r\n\r\nconst buttonContainerStyle = {\r\n  display: \"flex\",\r\n  flexWrap: \"wrap\",\r\n  flexGrow: 1,\r\n  minHeight: \"100%\",\r\n  width: \"100%\"\r\n};\r\n\r\nconst buttonStyle = {\r\n  width: \"calc(50% - 4px)\",\r\n  marginRight: \"4px\",\r\n  marginBottom: \"4px\",\r\n}\r\n\r\nconst BoardList = ({ boards }) => {\r\n  return (\r\n    <div>\r\n      <div>\r\n        <p style={headerStyle}>\r\n          <Icon type=\"user\" /> Personal Boards\r\n        </p>\r\n      </div>\r\n      <div style={buttonContainerStyle}>\r\n        {Object.values(boards).map((board, i) => (\r\n          <div style={buttonStyle} key={i+board.id}>\r\n            <BoardButton key={board.id} {...board} />\r\n          </div>\r\n        ))}\r\n        <div style={buttonStyle}>\r\n          <AddBoardButton />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  boards: state.boards\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(BoardList);\r\n","import React from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Board from \"../boards/Board\";\r\nimport BoardList from \"../boards/BoardList\"\r\n\r\nconst Router = () => {\r\n  return (\r\n    <main>\r\n      <Switch>\r\n        <Route\r\n          exact\r\n          path=\"/user/boards/:id\"\r\n          render={props => <Board id={props.match.params.id} />}\r\n        />\r\n        <Route exact path=\"/user/boards\" render={() => <BoardList />} />\r\n        <Route exact path=\"/\" render={() => <Redirect to=\"/user/boards\" />} />\r\n      </Switch>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Router;\r\n","import React from \"react\";\nimport \"antd/dist/antd.css\";\nimport Header from \"../features/header/Header\";\nimport { Layout } from \"antd\";\nimport Router from \"../features/router/Router\"\n\nconst layoutStyle = {\n  backgroundColor: \"black\",\n  minHeight: \"100vh\",\n  fontFamily: \"Helvetica\",\n  fontSize: \"14px\",\n  fontWeight: 400,\n  lineHeight: \"20px\"\n};\n\nconst contentStyle = {\n  padding: \"4px\",\n  backgroundColor: \"black\",\n  height: \"100%\"\n};\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Layout style={layoutStyle}>\n        <Header />\n        <Layout.Content style={contentStyle}>\n          <Router />\n        </Layout.Content>\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from \"redux\";\r\nimport cardsReducer from \"../features/cards/cardsSlice\";\r\nimport listsReducer from \"../features/lists/listsSlice\";\r\nimport boardsReducer from \"../features/boards/boardsSlice\";\r\n\r\nexport default combineReducers({\r\n  cards: cardsReducer,\r\n  lists: listsReducer,\r\n  boards: boardsReducer\r\n});\r\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport { configureStore } from \"redux-starter-kit\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./css/index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport rootReducer from \"./reducers\";\n\nconst store = configureStore({\n  reducer: rootReducer\n});\n\nrender(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}