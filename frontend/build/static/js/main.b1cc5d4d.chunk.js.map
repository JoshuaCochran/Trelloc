{"version":3,"sources":["features/user/userSlice.js","features/user/LogoutButton.js","features/header/Header.js","features/cards/CardList.js","features/cards/cardsSlice.js","features/cards/AddCardButton.js","selectors/CardSelectors.js","features/lists/listsSlice.js","features/menus/ListOptionsMenuMain.js","selectors/BoardSelectors.js","features/menus/MoveListMenu.js","features/menus/ListOptionsMenu.js","features/lists/ListOptionsDropDown.js","features/lists/List.js","features/lists/AddListButton.js","selectors/ListSelectors.js","features/lists/ListList.js","features/boards/Board.js","features/boards/boardsSlice.js","features/boards/AddBoardButton.js","features/boards/BoardButton.js","features/boards/BoardList.js","features/router/LoggedInRouter.js","features/user/LoginForm.js","features/user/LoginFormWrapper.js","features/user/RegistrationForm.js","features/user/RegistrationFormWrapper.js","features/router/LoggedOutRouter.js","selectors/UserSelectors.js","components/App.js","serviceWorker.js","reducers/index.js","index.js"],"names":["userSlice","createSlice","name","initialState","reducers","addUser","reducer","state","action","payload","username","email","token","prepare","deleteUser","actions","buttonStyle","display","position","marginRight","width","height","padding","mapDispatch","logout","dispatch","axios","get","then","res","Cookies","remove","path","catch","err","console","log","connect","useState","visible","setVisible","onClick","style","shape","icon","title","onOk","e","okText","onCancel","cancelText","headerStyle","backgroundImage","backgroundRepeat","backgroundPosition","backgroundSize","justifyContent","flexGrow","lineHeight","maxHeight","leftButtonContainer","rightButtonContainer","Header","to","cardStyle","borderRadius","zIndex","boxShadow","marginBottom","minHeight","maxWidth","bodyStyle","CardList","cards","Object","values","sort","a","b","map","card","key","id","draggableId","index","type","provided","snapshot","ref","innerRef","draggableProps","dragHandleProps","cardsSlice","addCard","owner","listId","description","deleteCard","reorderCards","oldListId","newListId","oldPosition","newPosition","orderedOldCards","orderedNewCards","keys","push","splice","removed","forEach","cardArray","i","result","data","put","moveCard","moveCards","inputStyle","buttonContainer","flexDirection","alignContent","submitButtonStyle","backgroundColor","color","closeButtonStyle","borderColor","textAlign","minWidth","addButtonStyle","postCard","post","_id","isVisible","setIsVisible","fromDropDown","cardTitle","setCardTitle","layout","onSubmit","preventDefault","trim","filter","length","getNumCards","Item","TextArea","value","onChange","target","placeholder","autoFocus","autoSize","htmlType","block","ghost","listsSlice","addList","boardId","deleteList","orderedLists","listArray","delete","moveList","newBoardId","reorderLists","deleting","menuStyle","overflow","dividerStyle","margin","headerTitle","textOverflow","whiteSpace","menuGroupStyle","overflowX","overflowY","menuItemStyle","cursor","fontWeight","textDecoration","setShowingMoveList","handleClick","Divider","ItemGroup","getActiveBoard","find","isActive","getTitle","getId","getPosition","Option","Select","alignItems","selectStyle","left","border","labelStyle","fontSize","boards","lists","selectedBoard","setSelectedBoard","selectedPosition","setSelectedPosition","defaultValue","ListOptionsMenu","showingMoveList","ellipsisStyle","float","ListOptionsDropDown","overlay","trigger","placement","listWrapper","boxSizing","verticalAlign","marginLeft","listContent","listHeader","flex","justify","List","wrapperRef","useRef","isTopVisible","setIsTopVisible","isBotVisible","setIsBotVisible","useEffect","document","addEventListener","handleClickOutside","removeEventListener","event","current","contains","provided1","droppableId","formStyle","postList","list","showingInput","setShowingInput","listTitle","setListTitle","getNumLists","scrollingWrapper","flexWrap","fetchLists","fetchCards","onDragEnd","source","destination","direction","boardsSlice","addBoard","isPrivate","deleteBoard","setActive","postBoard","board","boardTitle","setBoardTitle","wordWrap","buttonContainerStyle","fetchBoards","user","LoggedInRouter","exact","render","props","match","params","marginTop","LoginForm","Form","create","getFieldDecorator","form","className","rules","required","message","prefix","login","password","defaults","headers","common","set","formRef","setFormRef","saveFormRef","useCallback","node","validateFields","resetFields","RegistrationForm","validator","rule","callback","force","getFieldValue","register","LoggedOutRouter","isLoggedIn","layoutStyle","fontFamily","contentStyle","fetchUserDetails","baseURL","Content","Boolean","window","location","hostname","combineReducers","cardsReducer","listsReducer","boardsReducer","userReducer","store","configureStore","rootReducer","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b1cc5d4d.chunk.js","sourcesContent":["import { createSlice } from \"redux-starter-kit\";\r\nimport axios from \"axios\";\r\nimport Cookies from \"universal-cookie\";\r\n\r\nconst userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState: {},\r\n  reducers: {\r\n    addUser: {\r\n      reducer(state, action) {\r\n        const { username, email, token } = action.payload;\r\n        state[0] = { username, email, token };\r\n      },\r\n      prepare(username, email, token) {\r\n        return { payload: { username, email, token } };\r\n      }\r\n    },\r\n    deleteUser: {\r\n      reducer(state, action) {\r\n        delete state[0];\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nexport const { addUser, deleteUser } = userSlice.actions;\r\n\r\nexport default userSlice.reducer;\r\n\r\nexport const fetchUserDetails = token => dispatch => {\r\n  if (token)\r\n    axios.get(\"users/me\").then(res => {\r\n      dispatch(addUser(res.data.username, res.data.email, token));\r\n    });\r\n};\r\n\r\nexport const login = (email, password) => dispatch => {\r\n  const data = {\r\n    email: email,\r\n    password: password\r\n  };\r\n\r\n  axios\r\n    .post(\"users/login\", data)\r\n    .then(res => {\r\n      axios.defaults.headers.common[\"Authorization\"] =\r\n        \"Bearer \" + res.data.token;\r\n      dispatch(\r\n        addUser(res.data.user.username, res.data.user.email, res.data.token)\r\n      );\r\n      const cookies = new Cookies();\r\n      cookies.set(\"trelloc token\", res.data.token, { path: \"/\" });\r\n    })\r\n    .catch(err => {\r\n      console.log(\"Login error!\");\r\n    });\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n  axios\r\n    .get(\"users/me/logout\")\r\n    .then(res => {\r\n      const cookies = new Cookies();\r\n      cookies.remove(\"trelloc token\", { path: \"/\" });\r\n      dispatch(deleteUser());\r\n    })\r\n    .catch(err => {\r\n      console.log(\"Logout error!\");\r\n    });\r\n};\r\n\r\nexport const register = (username, email, password) => dispatch => {\r\n  const data = {\r\n    username: username,\r\n    email: email,\r\n    password: password\r\n  };\r\n\r\n  axios\r\n    .post(\"users/\", data)\r\n    .then(res => {\r\n      dispatch(\r\n        addUser(res.data.user.username, res.data.user.email, res.data.token)\r\n      );\r\n      const cookies = new Cookies();\r\n      cookies.set(\"trelloc token\", res.data.token, { path: \"/\" });\r\n    })\r\n    .catch(err => {\r\n      console.log(\"Registration error!\");\r\n    });\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"./userSlice\";\r\nimport { Modal, Button } from \"antd\";\r\n\r\nconst buttonStyle = {\r\n  display: \"inline-block\",\r\n  position: \"relative\",\r\n  marginRight: \"4px\",\r\n  width: \"32px\",\r\n  height: \"32px\",\r\n  padding: 0\r\n};\r\n\r\nconst LogoutButton = ({ logout }) => {\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const showModal = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleYes = e => {\r\n    logout();\r\n    setVisible(false);\r\n  };\r\n\r\n  const handleNo = e => {\r\n    setVisible(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        onClick={showModal}\r\n        style={buttonStyle}\r\n        shape=\"circle\"\r\n        icon=\"logout\"\r\n      ></Button>\r\n      <Modal\r\n        title=\"Logout\"\r\n        visible={visible}\r\n        onOk={handleYes}\r\n        okText=\"Yes\"\r\n        onCancel={handleNo}\r\n        cancelText=\"No\"\r\n      >\r\n        <p>Are you sure you want to log out?</p>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatch = { logout };\r\n\r\nexport default connect(null, mapDispatch)(LogoutButton);\r\n","import React from \"react\";\r\nimport { Layout, Button } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport LogoutButton from \"../user/LogoutButton\";\r\n\r\nconst headerStyle = {\r\n  backgroundImage:\r\n    \"url(https://a.trellocdn.com/prgb/dist/images/header-logo-2x.01ef898811a879595cea.png)\",\r\n  backgroundRepeat: \"no-repeat\",\r\n  backgroundPosition: \"center center\",\r\n  backgroundSize: \"80px 30px\",\r\n  height: \"40px\",\r\n  width: \"100%\",\r\n  display: \"flex\",\r\n  justifyContent: \"flex-start\",\r\n  flexGrow: 1,\r\n  padding: \"4px\",\r\n  lineHeight: \"0\",\r\n  maxHeight: \"40px\"\r\n};\r\n\r\nconst leftButtonContainer = {\r\n  display: \"flex\",\r\n  justifyContent: \"flex-start\",\r\n  flexGrow: 1\r\n};\r\n\r\nconst rightButtonContainer = {\r\n  display: \"flex\",\r\n  justifyContent: \"flex-end\",\r\n  flexGrow: 1\r\n};\r\n\r\nconst buttonStyle = {\r\n  display: \"inline-block\",\r\n  position: \"relative\",\r\n  marginRight: \"4px\",\r\n  width: \"32px\",\r\n  height: \"32px\",\r\n  padding: 0\r\n};\r\n\r\nconst Header = () => {\r\n  return (\r\n    <Layout.Header style={headerStyle}>\r\n      <div style={leftButtonContainer}>\r\n        <Link to=\"/\">\r\n          <Button style={buttonStyle} icon=\"home\" />\r\n        </Link>\r\n        <Button style={buttonStyle} icon=\"file-search\" />\r\n        <Button style={buttonStyle} icon=\"search\" />\r\n      </div>\r\n      <div style={rightButtonContainer}>\r\n        <Button style={buttonStyle} icon=\"plus\" />\r\n        <Button style={buttonStyle} icon=\"bell\" />\r\n        <LogoutButton />\r\n      </div>\r\n    </Layout.Header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Card } from \"antd\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\n\r\nconst cardStyle = {\r\n  borderRadius: \"3px\",\r\n  zIndex: 10,\r\n  boxShadow: \"0 1px 0 rgba(9, 30, 66, .25)\",\r\n  marginBottom: \"8px\",\r\n  minHeight: \"20px\",\r\n  maxWidth: \"300px\",\r\n  padding: \"0px !important\"\r\n};\r\n\r\nconst bodyStyle = {\r\n  padding: \"6px 8px 2px\"\r\n};\r\n\r\nconst CardList = ({ cards }) => (\r\n  <div>\r\n    {Object.values(cards)\r\n      .sort(function(a, b) {\r\n        return a.position - b.position;\r\n      })\r\n      .map(card => (\r\n        <Draggable key={card.id} draggableId={card.id} index={card.position} type=\"CARD\">\r\n          {(provided, snapshot) => (\r\n            <div\r\n              ref={provided.innerRef}\r\n              {...provided.draggableProps}\r\n              {...provided.dragHandleProps}\r\n            >\r\n              <Card key={card.id} style={cardStyle} bodyStyle={bodyStyle}>\r\n                {card.title}\r\n              </Card>\r\n            </div>\r\n          )}\r\n        </Draggable>\r\n      ))}\r\n  </div>\r\n);\r\n\r\nexport default CardList;\r\n","import { createSlice } from \"redux-starter-kit\";\r\nimport axios from \"axios\";\r\n\r\nconst cardsSlice = createSlice({\r\n  name: \"cards\",\r\n  initialState: {},\r\n  reducers: {\r\n    addCard: {\r\n      reducer(state, action) {\r\n        const { owner, id, listId, title, description, position } = action.payload;\r\n\r\n        state[id] = { owner, id, listId, title, description, position };\r\n      },\r\n      prepare(owner, id, listId, title, description, position) {\r\n        return {\r\n          payload: { owner, id, listId, title, description, position }\r\n        };\r\n      }\r\n    },\r\n    deleteCard: {\r\n      reducer(state, action) {\r\n        delete state[action.payload.id];\r\n      }\r\n    },\r\n    reorderCards: {\r\n      reducer(state, action) {\r\n        const {\r\n          id,\r\n          oldListId,\r\n          newListId,\r\n          oldPosition,\r\n          newPosition\r\n        } = action.payload;\r\n\r\n        // First we make two arrays.\r\n        let orderedOldCards = [];\r\n        let orderedNewCards = [];\r\n        Object.keys(state).map(key => {\r\n          // In the first array we put all the cards from the source list\r\n          if (state[key].listId === oldListId)\r\n            orderedOldCards.push([state[key], key]);\r\n          // In the second we put all the cards from the destination list\r\n          else if (state[key].listId === newListId)\r\n            orderedNewCards.push([state[key], key]);\r\n        });\r\n        // Then we sort both by the position of their elements\r\n        orderedOldCards.sort((a, b) => a[0].position - b[0].position);\r\n        orderedNewCards.sort((a, b) => a[0].position - b[0].position);\r\n\r\n        // If the card is moving within its original list\r\n        if (state[id].listId === newListId) {\r\n          // First we remove the card from the list\r\n          const [removed] = orderedOldCards.splice(oldPosition, 1);\r\n          // Then we splice it back in at its new position\r\n          orderedOldCards.splice(newPosition, 0, removed);\r\n          // Now, we update the state with the new card positions\r\n          // We didn't actually change any .position elements, but they are sorted by index\r\n          // So we simply update the position of the cards in state to match their index in orderedOldCards\r\n          orderedOldCards.forEach((cardArray, i) => {\r\n            state[cardArray[1]].position = i;\r\n          });\r\n        } else {\r\n          // If the card is moving between lists we do pretty much the same thing\r\n          const result = orderedOldCards;\r\n          const [removed] = result.splice(oldPosition, 1);\r\n          // We just skip the step where we put the card back in a new position in the source list\r\n          result.forEach((cardArray, i) => {\r\n            state[cardArray[1]].position = i;\r\n          });\r\n          // and instead update its listId element in state to the id of the destination list\r\n          state[id].listId = newListId;\r\n\r\n          // Then splice the card into the orderedNewCards array we made earlier\r\n          orderedNewCards.splice(newPosition, 0, removed);\r\n          // and update the state\r\n          orderedNewCards.forEach((cardArray, i) => {\r\n            state[cardArray[1]].position = i;\r\n          });\r\n        }\r\n\r\n        Object.keys(state).map(key => {\r\n          if (\r\n            state[key].listId === oldListId ||\r\n            state[key].listId === newListId\r\n          ) {\r\n            const data = {\r\n              listId: state[key].listId,\r\n              title: state[key].title,\r\n              position: state[key].position\r\n            };\r\n            axios.put(\"cards/\" + state[key].id, data).catch(err => {\r\n              console.log(\"Error in reorderCards!\");\r\n            });\r\n          }\r\n        });\r\n      },\r\n      prepare(id, oldListId, newListId, oldPosition, newPosition) {\r\n        return {\r\n          payload: { id, oldListId, newListId, oldPosition, newPosition }\r\n        };\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nexport const {\r\n  addCard,\r\n  deleteCard,\r\n  moveCard,\r\n  moveCards,\r\n  reorderCards\r\n} = cardsSlice.actions;\r\n\r\nexport default cardsSlice.reducer;\r\n\r\nexport const postCard = (listId, title, description, position) => dispatch => {\r\n  const data = {\r\n    listId: listId,\r\n    title: title,\r\n    description: \"\",\r\n    position: position\r\n  };\r\n  axios\r\n    .post(\"cards\", data)\r\n    .then(res => {\r\n      dispatch(\r\n        addCard(res.data.owner, res.data.card._id, listId, title, description, position)\r\n      );\r\n    })\r\n    .catch(err => {\r\n      console.log(\"Error in CreateCard!\");\r\n    });\r\n};\r\n\r\nexport const fetchCards = () => dispatch => {\r\n  axios.get(\"cards\").then(res => {\r\n    res.data.map(card => {\r\n      dispatch(\r\n        addCard(\r\n          card.owner,\r\n          card._id,\r\n          card.listId,\r\n          card.title,\r\n          card.description,\r\n          card.position\r\n        )\r\n      );\r\n    });\r\n  });\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { postCard } from \"./cardsSlice\";\r\nimport { Form, Input, Button } from \"antd\";\r\nimport { getNumCards } from \"../../selectors/CardSelectors\"\r\n\r\nconst inputStyle = {\r\n  maxHeight: \"162px\",\r\n  minHeight: \"54px\"\r\n};\r\n\r\nconst buttonContainer = {\r\n  display: \"flex\",\r\n  flexDirection: \"row\",\r\n  justifyContent: \"flex-start\",\r\n  alignContent: \"center\"\r\n};\r\n\r\nconst submitButtonStyle = {\r\n  minHeight: \"38px\",\r\n  maxHeight: \"38px\",\r\n  backgroundColor: \"#5aac44\",\r\n  color: \"white\"\r\n};\r\n\r\nconst closeButtonStyle = {\r\n  borderColor: \"#ebecf0\",\r\n  color: \"#5e6c84\",\r\n  textAlign: \"left\",\r\n  boxShadow: \"none\",\r\n  height: \"38px\",\r\n  width: \"38px\",\r\n  minWidth: \"38px\"\r\n};\r\n\r\nconst addButtonStyle = {\r\n  borderColor: \"#ebecf0\",\r\n  color: \"#5e6c84\",\r\n  textAlign: \"left\",\r\n  boxShadow: \"none\"\r\n};\r\n\r\nconst mapDispatch = { postCard };\r\n\r\nconst AddCardButton = ({\r\n  cards,\r\n  postCard,\r\n  listId,\r\n  isVisible,\r\n  setIsVisible,\r\n  fromDropDown\r\n}) => {\r\n  const [cardTitle, setCardTitle] = useState(\"\");\r\n\r\n  const onChange = e => setCardTitle(e.target.value);\r\n\r\n  if (isVisible)\r\n    return (\r\n      <Form\r\n        layout=\"inline\"\r\n        onSubmit={e => {\r\n          e.preventDefault();\r\n          if (!cardTitle.trim()) return;\r\n\r\n          postCard(listId, cardTitle, \"\", getNumCards(cards, listId));\r\n\r\n          setCardTitle(\"\");\r\n          setIsVisible(false);\r\n        }}\r\n      >\r\n        <Form.Item style={{ width: \"100%\" }}>\r\n          <Input.TextArea\r\n            style={inputStyle}\r\n            value={cardTitle}\r\n            onChange={onChange}\r\n            type=\"text\"\r\n            placeholder=\"Enter a title for this card...\"\r\n            autoFocus={true}\r\n            autoSize={true}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <div style={buttonContainer}>\r\n            <Button htmlType=\"submit\" style={submitButtonStyle} block>\r\n              Add Card\r\n            </Button>\r\n            <Button\r\n              ghost={true}\r\n              onClick={() => {\r\n                setIsVisible(false);\r\n                setCardTitle(\"\");\r\n              }}\r\n              style={closeButtonStyle}\r\n              icon=\"close\"\r\n            />\r\n          </div>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  else if (!isVisible && !fromDropDown)\r\n    return (\r\n      <Button\r\n        block\r\n        ghost={true}\r\n        onClick={() => {\r\n          setIsVisible(true);\r\n        }}\r\n        style={addButtonStyle}\r\n        icon=\"plus\"\r\n      >\r\n        Add another card\r\n      </Button>\r\n    );\r\n  else return null;\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  cards: state.cards\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatch)(AddCardButton);\r\n","export const getNumCards = (state, listId) => {\r\n    return Object.values(state).filter(card => card.listId === listId).length;\r\n  };\r\n  ","import { createSlice } from \"redux-starter-kit\";\r\nimport axios from \"axios\";\r\n\r\nconst listsSlice = createSlice({\r\n  name: \"lists\",\r\n  initialState: {},\r\n  reducers: {\r\n    addList: {\r\n      reducer(state, action) {\r\n        const { owner, id, boardId, title, position } = action.payload;\r\n\r\n        state[id] = { owner, id, boardId, title, position };\r\n      },\r\n      prepare(owner, id, boardId, title, position) {\r\n        return { payload: { owner, id, boardId, title, position } };\r\n      }\r\n    },\r\n    deleteList: {\r\n      reducer(state, action) {\r\n        const id = action.payload;\r\n        const boardId = state[id].boardId;\r\n\r\n        let orderedLists = [];\r\n        Object.keys(state).map(key => {\r\n          if (state[key].boardId === boardId)\r\n            orderedLists.push([state[key], key]);\r\n        });\r\n        orderedLists.sort((a, b) => a[0].position - b[0].position);\r\n\r\n        orderedLists.splice(state[id].position, 1);\r\n        delete state[id];\r\n\r\n        orderedLists.forEach((listArray, i) => {\r\n          state[listArray[1]].position = i;\r\n        });\r\n\r\n        Object.keys(state).map(key => {\r\n          if (state[key].boardId === boardId) {\r\n            const data = {\r\n              boardId: state[key].boardId,\r\n              title: state[key].title,\r\n              position: state[key].position\r\n            };\r\n            axios.put(\"lists/\" + state[key].id, data).catch(err => {\r\n              console.log(\"Error in deleteLists!\");\r\n            });\r\n          }\r\n        });\r\n\r\n        axios.delete(\"lists/\" + id).catch(err => {\r\n          console.log(\"Error in deleteList!\");\r\n        });\r\n      }\r\n    },\r\n    moveList: {\r\n      reducer(state, action) {\r\n        const { listId, newPosition, newBoardId } = action.payload;\r\n        console.log(newPosition);\r\n\r\n        let orderedLists = [];\r\n        Object.keys(state).map(key =>\r\n          state[key].boardId === newBoardId\r\n            ? orderedLists.push([state[key], key])\r\n            : null\r\n        );\r\n        orderedLists.sort((a, b) => a[0].position - b[0].position);\r\n\r\n        if (state[listId].boardId !== newBoardId) {\r\n          state[listId].position = orderedLists.length;\r\n          state[listId].boardId = newBoardId;\r\n          orderedLists.push([state[listId], listId]);\r\n        }\r\n\r\n        if (state[listId].position < orderedLists.length - 1)\r\n          for (let i = state[listId].position + 1; i <= newPosition; i++)\r\n            orderedLists[i][0].position -= 1;\r\n        else\r\n          for (let i = newPosition; i < state[listId].position; i++)\r\n            orderedLists[i][0].position += 1;\r\n        state[listId].position = newPosition;\r\n\r\n        orderedLists.forEach(\r\n          listArray => (state[listArray[1]].position = listArray[0].position)\r\n        );\r\n\r\n        Object.keys(state).map(key => {\r\n          const data = {\r\n            boardId: state[key].boardId,\r\n            title: state[key].title,\r\n            position: state[key].position\r\n          };\r\n          axios.put(\"lists/\" + state[key].id, data).catch(err => {\r\n            console.log(\"Error in CreateBoard!\");\r\n          });\r\n        });\r\n      },\r\n      prepare(listId, newPosition, newBoardId) {\r\n        return { payload: { listId, newPosition, newBoardId } };\r\n      }\r\n    },\r\n    reorderLists: {\r\n      reducer(state, action) {\r\n        const {\r\n          id,\r\n          boardId,\r\n          oldPosition,\r\n          newPosition,\r\n          deleting\r\n        } = action.payload;\r\n\r\n        let orderedLists = [];\r\n        Object.keys(state).map(key => {\r\n          if (state[key].boardId === boardId)\r\n            orderedLists.push([state[key], key]);\r\n        });\r\n        orderedLists.sort((a, b) => a[0].position - b[0].position);\r\n\r\n        const [removed] = orderedLists.splice(oldPosition, 1);\r\n\r\n        if (!deleting) orderedLists.splice(newPosition, 0, removed);\r\n        else delete state[id];\r\n\r\n        orderedLists.forEach((listArray, i) => {\r\n          state[listArray[1]].position = i;\r\n        });\r\n\r\n        Object.keys(state).map(key => {\r\n          if (state[key].boardId === boardId) {\r\n            const data = {\r\n              boardId: state[key].boardId,\r\n              title: state[key].title,\r\n              position: state[key].position\r\n            };\r\n            axios.put(\"lists/\" + state[key].id, data).catch(err => {\r\n              console.log(\"Error in reorderLists!\");\r\n            });\r\n          }\r\n        });\r\n      },\r\n      prepare(id, boardId, oldPosition, newPosition, deleting) {\r\n        return { payload: { id, boardId, oldPosition, newPosition, deleting } };\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nexport const {\r\n  addList,\r\n  deleteList,\r\n  moveList,\r\n  reorderLists\r\n} = listsSlice.actions;\r\n\r\nexport default listsSlice.reducer;\r\n\r\nexport const fetchLists = () => dispatch => {\r\n  axios.get(\"lists\").then(res => {\r\n    res.data.map(list => {\r\n      dispatch(addList(list.owner, list._id, list.boardId, list.title, list.position));\r\n    });\r\n  });\r\n};\r\n\r\nexport const postList = (boardId, title, position) => dispatch => {\r\n  const data = {\r\n    boardId: boardId,\r\n    title: title,\r\n    position: position\r\n  };\r\n  axios\r\n    .post(\"lists\", data)\r\n    .then(res => {\r\n      dispatch(addList(res.data.owner, res.data.list._id, boardId, title, position));\r\n    })\r\n    .catch(err => {\r\n      console.log(\"Error in CreateBoard!\");\r\n    });\r\n};\r\n","import React from \"react\";\r\nimport { Menu } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteList } from \"../lists/listsSlice\";\r\n\r\nconst menuStyle = {\r\n  width: \"304px\",\r\n  overflow: \"hidden\"\r\n};\r\n\r\nconst dividerStyle = {\r\n  margin: \"4px 0\"\r\n};\r\n\r\nconst headerStyle = {\r\n  display: \"block\",\r\n  textAlign: \"center\",\r\n  height: \"40px\",\r\n  color: \"#172b4d\"\r\n};\r\n\r\nconst headerTitle = {\r\n  display: \"block\",\r\n  lineHeight: \"40px\",\r\n  margin: \"0 12px\",\r\n  overflow: \"hidden\",\r\n  padding: \"0 32px\",\r\n  textOverflow: \"ellipsis\",\r\n  whiteSpace: \"nowrap\"\r\n};\r\n\r\nconst menuGroupStyle = {\r\n  overflowX: \"hidden\",\r\n  overflowY: \"auto\",\r\n  padding: \"0 12px 12px\"\r\n};\r\n\r\nconst menuItemStyle = {\r\n  cursor: \"pointer\",\r\n  display: \"block\",\r\n  fontWeight: \"400\",\r\n  padding: \"6px 12px\",\r\n  margin: \"0 -12px\",\r\n  textDecoration: \"none\",\r\n  color: \"#172b4d\"\r\n};\r\n\r\nconst handleClick = (\r\n  e,\r\n  setIsVisible,\r\n  setShowingMoveList,\r\n  listId,\r\n  deleteList\r\n) => {\r\n  if (e.key === \"1\") setIsVisible(true);\r\n  else if (e.key === \"3\") setShowingMoveList(true);\r\n  else if (e.key === \"8\") {\r\n    console.log(\"Pressed archive!\")\r\n    deleteList(listId);\r\n  }\r\n};\r\n\r\nconst ListOptionsMenuMain = ({\r\n  setIsVisible,\r\n  setShowingMoveList,\r\n  listId,\r\n  deleteList\r\n}) => {\r\n  return (\r\n    <Menu\r\n      onClick={e =>\r\n        handleClick(e, setIsVisible, setShowingMoveList, listId, deleteList)\r\n      }\r\n      style={menuStyle}\r\n    >\r\n      <Menu.Item style={headerStyle}>\r\n        <span style={headerTitle}>List Actions</span>\r\n      </Menu.Item>\r\n      <Menu.Divider style={dividerStyle} />\r\n      <Menu.ItemGroup style={menuGroupStyle}>\r\n        <Menu.Item key=\"1\" style={menuItemStyle}>\r\n          Add Card...\r\n        </Menu.Item>\r\n        <Menu.Item key=\"2\" style={menuItemStyle}>\r\n          Copy List...\r\n        </Menu.Item>\r\n        <Menu.Item key=\"3\" style={menuItemStyle}>\r\n          Move List...\r\n        </Menu.Item>\r\n        <Menu.Item key=\"4\" style={menuItemStyle}>\r\n          Watch\r\n        </Menu.Item>\r\n        <Menu.Divider style={dividerStyle} />\r\n        <Menu.Item key=\"5\" style={menuItemStyle}>\r\n          Sort By...\r\n        </Menu.Item>\r\n        <Menu.Divider style={dividerStyle} />\r\n        <Menu.Item key=\"6\" style={menuItemStyle}>\r\n          Move All Cards in This List...\r\n        </Menu.Item>\r\n        <Menu.Item key=\"7\" style={menuItemStyle}>\r\n          Archive All Cards in This List...\r\n        </Menu.Item>\r\n        <Menu.Divider style={dividerStyle} />\r\n        <Menu.Item key=\"8\" style={menuItemStyle}>\r\n          Archive This List\r\n        </Menu.Item>\r\n      </Menu.ItemGroup>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst mapDispatch = { deleteList };\r\n\r\nexport default connect(null, mapDispatch)(ListOptionsMenuMain);\r\n","export const getActiveBoard = (state) => { \r\n   return state[Object.keys(state).find(key => state[key].isActive === true)];\r\n}\r\n\r\nexport const getObjectById = (state, id) => { \r\n  return Object.keys(state).find(key => state[key].id === id);\r\n}\r\n\r\nexport const getObjectIds = (state) => {\r\n  return state.map(item => item.id);\r\n}\r\n\r\nexport const getTitle = (state) => { \r\n  return state.title;\r\n}\r\n\r\nexport const getId = (state) => {\r\n  return state.id;\r\n}\r\n\r\nexport const getPosition = (state) => {\r\n  return state.position;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Menu, Button, Select } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport { moveList } from \"../lists/listsSlice\";\r\nimport { getActiveBoard, getTitle, getId, getPosition } from \"../../selectors/BoardSelectors\"\r\n\r\nconst { Option } = Select;\r\n\r\nconst menuStyle = {\r\n  width: \"304px\",\r\n  overflow: \"hidden\",\r\n  height: \"auto\"\r\n};\r\n\r\nconst dividerStyle = {\r\n  margin: \"4px 0\"\r\n};\r\n\r\nconst headerStyle = {\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  textAlign: \"center\",\r\n  justifyContent: \"space-between\",\r\n  height: \"40px\",\r\n  color: \"#172b4d\"\r\n};\r\n\r\nconst headerTitle = {\r\n  display: \"block\",\r\n  lineHeight: \"40px\",\r\n  margin: \"0 12px\",\r\n  overflow: \"hidden\",\r\n  padding: \"0 32px\",\r\n  textOverflow: \"ellipsis\",\r\n  whiteSpace: \"nowrap\"\r\n};\r\n\r\nconst buttonStyle = {\r\n  borderColor: \"transparent\",\r\n  color: \"#5e6c84\",\r\n  textAlign: \"left\",\r\n  boxShadow: \"none\",\r\n  display: \"block\",\r\n  height: \"auto\",\r\n  padding: \"10px 8px 10px 12px\"\r\n};\r\n\r\nconst selectStyle = {\r\n  left: 0,\r\n  margin: 0,\r\n  border: \"none\",\r\n  width: \"100%\"\r\n};\r\n\r\nconst labelStyle = {\r\n  height: \"8px\",\r\n  margin: \"8px\",\r\n  padding: \"4px\",\r\n  fontSize: \"14px\",\r\n  fontWeight: 600\r\n};\r\n\r\nconst handleClick = (e, setIsVisible, setShowingMoveList) => {\r\n  if (e.key === \"1\") setIsVisible(true);\r\n  else if (e.key === \"3\") setShowingMoveList(true);\r\n};\r\n\r\nconst MoveListMenu = ({\r\n  setIsVisible,\r\n  setShowingMoveList,\r\n  listId,\r\n  boards,\r\n  lists,\r\n  moveList\r\n}) => {\r\n  const [selectedBoard, setSelectedBoard] = useState(getId(getActiveBoard(boards)));\r\n  const [selectedPosition, setSelectedPosition] = useState(getPosition(lists[listId]));\r\n\r\n  return (\r\n    <Menu\r\n      onClick={e => handleClick(e, setIsVisible, setShowingMoveList)}\r\n      style={menuStyle}\r\n    >\r\n      <Menu.Item style={headerStyle}>\r\n        <Button\r\n          onClick={() => setShowingMoveList(false)}\r\n          icon=\"left\"\r\n          style={buttonStyle}\r\n        />\r\n        <span style={headerTitle}>Move List</span>\r\n        <Button icon=\"close\" style={buttonStyle}/>\r\n      </Menu.Item>\r\n      <Menu.Divider style={dividerStyle} />\r\n      <div>\r\n        <div style={labelStyle}>Board: </div>\r\n        <Select\r\n          defaultValue={getTitle(getActiveBoard(boards))}\r\n          style={selectStyle}\r\n          onChange={value => setSelectedBoard(value)}\r\n        >\r\n          {Object.keys(boards).map(key => (\r\n            <Option value={getId(boards[key])} key={key}>\r\n              {getTitle(boards[key])}\r\n            </Option>\r\n          ))}\r\n        </Select>\r\n      </div>\r\n      <div style={labelStyle}>Position: </div>\r\n      <Select\r\n        defaultValue={listId}\r\n        style={selectStyle}\r\n        onChange={value => setSelectedPosition(value)}\r\n      >\r\n        {Object.keys(lists).map(key =>\r\n          lists[key].boardId === selectedBoard ? (\r\n            <Option value={getPosition(lists[key])} key={key}>\r\n              {getPosition(lists[key])}\r\n              {getPosition(lists[key]) === listId ? \" (current)\" : null}\r\n            </Option>\r\n          ) : null\r\n        )}\r\n      </Select>\r\n      <Menu.Item>\r\n        <Button\r\n          onClick={() => moveList(listId, selectedPosition, selectedBoard)}\r\n        >\r\n          Move\r\n        </Button>\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  boards: state.boards,\r\n  lists: state.lists\r\n});\r\n\r\nconst mapDispatch = { moveList };\r\n\r\nexport default connect(mapStateToProps, mapDispatch)(MoveListMenu);\r\n","import React from \"react\";\r\nimport ListOptionsMenuMain from \"./ListOptionsMenuMain\";\r\nimport MoveListMenu from \"./MoveListMenu\";\r\n\r\nconst ListOptionsMenu = ({\r\n  setIsVisible,\r\n  showingMoveList,\r\n  setShowingMoveList,\r\n  listId\r\n}) => {\r\n  if (showingMoveList)\r\n    return (\r\n      <MoveListMenu\r\n        setIsVisible={setIsVisible}\r\n        setShowingMoveList={setShowingMoveList}\r\n        listId={listId}\r\n      />\r\n    );\r\n  else\r\n    return (\r\n      <ListOptionsMenuMain\r\n        setIsVisible={setIsVisible}\r\n        setShowingMoveList={setShowingMoveList}\r\n        listId={listId}\r\n      />\r\n    );\r\n};\r\n\r\nexport default ListOptionsMenu;\r\n","import React, { useState } from \"react\";\r\nimport { Dropdown, Icon } from \"antd\";\r\nimport ListOptionsMenu from \"../menus/ListOptionsMenu\";\r\n\r\nconst ellipsisStyle = {\r\n  borderColor: \"#ebecf0\",\r\n  color: \"#5e6c84\",\r\n  textAlign: \"left\",\r\n  boxShadow: \"none\",\r\n  float: \"right\"\r\n};\r\n\r\nconst ListOptionsDropDown = ({ setIsVisible, listId }) => {\r\n  const [showingMoveList, setShowingMoveList] = useState(false);\r\n\r\n  return (\r\n    <Dropdown\r\n      overlay={\r\n        <ListOptionsMenu\r\n          setIsVisible={setIsVisible}\r\n          showingMoveList={showingMoveList}\r\n          setShowingMoveList={setShowingMoveList}\r\n          listId={listId}\r\n        />\r\n      }\r\n      trigger={[\"click\"]}\r\n      placement=\"bottomRight\"\r\n    >\r\n      <Icon type=\"ellipsis\" style={ellipsisStyle} />\r\n    </Dropdown>\r\n  );\r\n};\r\n\r\nexport default ListOptionsDropDown;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport CardList from \"../cards/CardList\";\r\nimport AddCardButton from \"../cards/AddCardButton\";\r\nimport ListOptionsDropDown from \"./ListOptionsDropDown\";\r\nimport { Card } from \"antd\";\r\nimport { Draggable, Droppable } from \"react-beautiful-dnd\";\r\n\r\nconst listWrapper = {\r\n  width: \"272px\",\r\n  height: \"100%\",\r\n  margin: \"0 4px\",\r\n  boxSizing: \"border-box\",\r\n  display: \"inline-block\",\r\n  verticalAlign: \"top\"\r\n};\r\n\r\nconst cardStyle = {\r\n  width: \"272px\",\r\n  backgroundColor: \"#ebecf0\",\r\n  marginLeft: \"8px\",\r\n  borderRadius: \"3px\",\r\n  boxSizing: \"border-box\",\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  maxHeight: \"100%\",\r\n  overflowY: \"hidden\"\r\n};\r\n\r\nconst listContent = {};\r\n\r\nconst listHeader = {\r\n  flex: \"0 0 auto\",\r\n  padding: \"10px 8px\",\r\n  position: \"relative\",\r\n  minHeight: \"20px\",\r\n  fontWeight: 600\r\n};\r\n\r\nconst buttonStyle = {\r\n  minWidth: \"100%\",\r\n  position: \"relative\",\r\n  padding: \"4px 0px\",\r\n  display: \"flex\",\r\n  justify: \"space-between\"\r\n};\r\n\r\nconst ellipsisStyle = {\r\n  borderColor: \"#ebecf0\",\r\n  color: \"#5e6c84\",\r\n  textAlign: \"left\",\r\n  boxShadow: \"none\",\r\n  float: \"right\"\r\n};\r\n\r\nconst List = ({\r\n  id,\r\n  title,\r\n  position,\r\n  cards\r\n}) => {\r\n  const wrapperRef = useRef(null);\r\n  const [isTopVisible, setIsTopVisible] = useState(false);\r\n  const [isBotVisible, setIsBotVisible] = useState(false);\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"mousedown\", handleClickOutside, false);\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClickOutside, false);\r\n    };\r\n  }, []);\r\n\r\n  const handleClickOutside = event => {\r\n    if (wrapperRef.current && !wrapperRef.current.contains(event.target)) {\r\n      setIsTopVisible(false);\r\n      setIsBotVisible(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Draggable\r\n      key={id}\r\n      draggableId={id}\r\n      index={position}\r\n      type=\"LIST\"\r\n    >\r\n      {(provided1, snapshot) => (\r\n        <div\r\n          ref={provided1.innerRef}\r\n          {...provided1.draggableProps}\r\n          {...provided1.dragHandleProps}\r\n        >\r\n          <Droppable droppableId={id} type=\"CARD\">\r\n            {(provided, snapshot) => (\r\n              <div ref={provided.innerRef}>\r\n                <div style={listWrapper} ref={wrapperRef}>\r\n                  <Card style={cardStyle} bodyStyle={{ padding: \"0 4px\" }}>\r\n                    <div style={listContent}>\r\n                      <div style={listHeader}>\r\n                        {title}{\" \"}\r\n                        <ListOptionsDropDown\r\n                          style={ellipsisStyle}\r\n                          setIsVisible={setIsTopVisible}\r\n                          listId={id}\r\n                        />\r\n                      </div>\r\n                      <div style={buttonStyle}>\r\n                        <AddCardButton\r\n                          listId={id}\r\n                          isVisible={isTopVisible}\r\n                          setIsVisible={setIsTopVisible}\r\n                          fromDropDown={true}\r\n                        >\r\n                          Add another card\r\n                        </AddCardButton>\r\n                      </div>\r\n                      <div\r\n                        style={{\r\n                          zIndex: 10,\r\n                          maxHeight: \"80vh\",\r\n                          overflowY: \"scroll\"\r\n                        }}\r\n                      >\r\n                        <CardList\r\n                          cards={cards}\r\n                        />\r\n                      </div>\r\n                      <div style={buttonStyle}>\r\n                        <AddCardButton\r\n                          listId={id}\r\n                          isVisible={isBotVisible}\r\n                          setIsVisible={setIsBotVisible}\r\n                          fromDropDown={false}\r\n                        >\r\n                          Add another card\r\n                        </AddCardButton>\r\n                      </div>\r\n                    </div>\r\n                  </Card>\r\n                </div>\r\n                {provided.placeholder}\r\n              </div>\r\n            )}\r\n          </Droppable>\r\n          {provided1.placeholder}\r\n        </div>\r\n      )}\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { postList } from \"./listsSlice\";\r\nimport { Form, Input, Button } from \"antd\";\r\nimport { getNumLists } from \"../../selectors/ListSelectors\";\r\n\r\nconst buttonStyle = {\r\n  marginLeft: \"8px\",\r\n  minHeight: \"38px\",\r\n  maxHeight: \"38px\",\r\n  backgroundColor: \"hsla(0, 0%, 100%, .24)\",\r\n  color: \"white\",\r\n  borderColor: \"transparent\",\r\n  width: \"272px\",\r\n  display: \"flex\",\r\n  justifyContent: \"flex-start\",\r\n  maxWidth: \"272px\"\r\n};\r\n\r\nconst formStyle = {\r\n  marginLeft: \"8px\"\r\n};\r\n\r\nconst mapDispatch = { postList };\r\n\r\nconst AddListButton = ({ lists, postList, boardId }) => {\r\n  const [showingInput, setShowingInput] = useState(false);\r\n  const [listTitle, setListTitle] = useState(\"\");\r\n\r\n  const onChange = e => setListTitle(e.target.value);\r\n\r\n  if (showingInput)\r\n    return (\r\n      <Form\r\n        layout=\"inline\"\r\n        onSubmit={e => {\r\n          e.preventDefault();\r\n          if (!listTitle.trim()) return;\r\n\r\n          postList(boardId, listTitle, getNumLists(lists, boardId));\r\n\r\n          setListTitle(\"\");\r\n          setShowingInput(false);\r\n        }}\r\n        style={formStyle}\r\n      >\r\n        <Form.Item>\r\n          <Input\r\n            value={listTitle}\r\n            onChange={onChange}\r\n            type=\"text\"\r\n            placeholder=\"Enter a list title...\"\r\n            autoFocus={true}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button htmlType=\"submit\" style={buttonStyle}>\r\n            Add List\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  else\r\n    return (\r\n      <Button\r\n        onClick={() => setShowingInput(true)}\r\n        style={buttonStyle}\r\n        icon=\"plus\"\r\n      >\r\n        Add another list\r\n      </Button>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  lists: state.lists\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatch)(AddListButton);\r\n","export const getNumLists = (state, boardId) => {\r\n  return Object.values(state).filter(list => list.boardId === boardId).length;\r\n};\r\n\r\nexport const getPosition = (state, listId) => {\r\n  return state[listId].position;\r\n}","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport List from \"./List\";\r\nimport AddListButton from \"./AddListButton\";\r\nimport { fetchLists } from \"./listsSlice\";\r\nimport { fetchCards } from \"../cards/cardsSlice\";\r\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\r\n\r\nconst scrollingWrapper = {\r\n  display: \"flex\",\r\n  overflowX: \"auto\",\r\n  flexWrap: \"nowrap\",\r\n  height: \"calc(100vh - 45px)\"\r\n};\r\n\r\nconst ListList = ({ fetchLists, fetchCards, boardId, lists, cards }) => {\r\n  useEffect(() => {\r\n    fetchLists();\r\n    fetchCards();\r\n  }, []);\r\n\r\n  return (\r\n    <div style={scrollingWrapper}>\r\n      {lists\r\n        ? Object.values(lists)\r\n            .sort((a, b) => a.position - b.position)\r\n            .map((list, i) => (\r\n              <List\r\n                key={list.id}\r\n                {...list}\r\n                cards={Object.values(cards).filter(\r\n                  card => card.listId === list.id\r\n                )}\r\n              />\r\n            ))\r\n        : null}\r\n      <AddListButton boardId={boardId} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  cards: state.cards\r\n});\r\n\r\nconst mapDispatch = { fetchLists, fetchCards };\r\n\r\nexport default connect(mapStateToProps, mapDispatch)(ListList);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport ListList from \"../lists/ListList\";\r\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\r\nimport { reorderCards } from \"../cards/cardsSlice\";\r\nimport { reorderLists } from \"../lists/listsSlice\";\r\n\r\nconst Board = ({ id, lists, reorderCards, reorderLists }) => {\r\n  const onDragEnd = result => {\r\n    const { draggableId, type, source, destination } = result;\r\n    console.log(result);\r\n\r\n    if (!destination) {\r\n      return;\r\n    }\r\n\r\n    if (type === \"CARD\") {\r\n      console.log(\"I'm a card!\");\r\n      reorderCards(\r\n        draggableId,\r\n        source.droppableId,\r\n        destination.droppableId,\r\n        source.index,\r\n        destination.index\r\n      );\r\n    } else if (type === \"LIST\") {\r\n      console.log(\"I'm a list!\");\r\n      reorderLists(\r\n        draggableId,\r\n        source.droppableId,\r\n        source.index,\r\n        destination.index,\r\n        false\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <DragDropContext onDragEnd={onDragEnd}>\r\n      <Droppable droppableId={id} type=\"LIST\" direction=\"horizontal\">\r\n        {(provided, snapshot) => (\r\n          <div ref={provided.innerRef}>\r\n            <ListList\r\n              boardId={id}\r\n              lists={Object.values(lists).filter(list => list.boardId === id)}\r\n            />\r\n            {provided.placeholder}\r\n          </div>\r\n        )}\r\n      </Droppable>\r\n    </DragDropContext>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  lists: state.lists\r\n});\r\n\r\nconst mapDispatch = { reorderCards, reorderLists };\r\n\r\nexport default connect(mapStateToProps, mapDispatch)(Board);\r\n","import { createSlice } from \"redux-starter-kit\";\r\nimport axios from \"axios\";\r\n\r\nconst boardsSlice = createSlice({\r\n  name: \"boards\",\r\n  initialState: {},\r\n  reducers: {\r\n    addBoard: {\r\n      reducer(state, action) {\r\n        const { id, owner, title, isPrivate, isActive } = action.payload;\r\n        state[id] = { id, owner, title, isPrivate, isActive };\r\n      },\r\n      prepare(id, owner, title, isPrivate, isActive) {\r\n        return { payload: { id, owner, title, isPrivate, isActive } };\r\n      }\r\n    },\r\n    deleteBoard: {\r\n      reducer(state, action) {\r\n        delete state[action.payload.id];\r\n      }\r\n    },\r\n    setActive: {\r\n      reducer(state, action) {\r\n        Object.keys(state).forEach(key => {\r\n          if (state[key].isActive === true) state[key].isActive = false;\r\n        });\r\n        state[action.payload.id].isActive = action.payload.isActive;\r\n      },\r\n      prepare(id, isActive) {\r\n        return { payload: { id, isActive } };\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nexport const { addBoard, deleteBoard, setActive } = boardsSlice.actions;\r\n\r\nexport default boardsSlice.reducer;\r\n\r\nexport const postBoard = (title, isPrivate, isActive) => dispatch => {\r\n  const data = {\r\n    title: title,\r\n    isPrivate: isPrivate,\r\n    isActive: isActive\r\n  };\r\n\r\n  axios\r\n    .post(\"boards\", data)\r\n    .then(res => {\r\n      dispatch(\r\n        addBoard(res.data.board._id, res.data.board.owner, title, true, false)\r\n      );\r\n    })\r\n    .catch(err => {\r\n      console.log(\"Error in CreateBoard!\");\r\n    });\r\n};\r\n\r\nexport const fetchBoards = () => dispatch => {\r\n  axios.get(\"boards\").then(res => {\r\n    res.data.map(board => {\r\n      dispatch(\r\n        addBoard(\r\n          board._id,\r\n          board.owner,\r\n          board.title,\r\n          board.isPrivate,\r\n          board.isActive\r\n        )\r\n      );\r\n    });\r\n  });\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { postBoard } from \"./boardsSlice\";\r\nimport { Form, Input, Button } from \"antd\";\r\n\r\nconst buttonStyle = {\r\n  marginRight: \"8px\",\r\n  marginBottom: \"8px\",\r\n  backgroundColor: \"#97a0af\",\r\n  height: \"80px\",\r\n  width: \"100%\",\r\n  fontSize: \"16px\",\r\n  fontWeight: 700,\r\n  color: \"white\",\r\n  borderColor: \"transparent\"\r\n};\r\n\r\nconst formStyle = {\r\n  marginLeft: \"8px\"\r\n};\r\n\r\nconst mapDispatch = { postBoard };\r\n\r\nconst AddBoardButton = ({ postBoard }) => {\r\n  const [showingInput, setShowingInput] = useState(false);\r\n  const [boardTitle, setBoardTitle] = useState(\"\");\r\n\r\n  const onChange = e => setBoardTitle(e.target.value);\r\n\r\n  if (showingInput)\r\n    return (\r\n      <Form\r\n        layout=\"inline\"\r\n        onSubmit={e => {\r\n          e.preventDefault();\r\n          if (!boardTitle.trim()) return;\r\n\r\n          postBoard(boardTitle, true, false);\r\n         \r\n          setBoardTitle(\"\");\r\n          setShowingInput(false);\r\n        }}\r\n        style={formStyle}\r\n      >\r\n        <Form.Item>\r\n          <Input\r\n            value={boardTitle}\r\n            onChange={onChange}\r\n            type=\"text\"\r\n            placeholder=\"Enter a board title...\"\r\n            autoFocus={true}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button htmlType=\"submit\" style={buttonStyle}>\r\n            Add Board\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  else\r\n    return (\r\n      <Button onClick={() => setShowingInput(true)} style={buttonStyle}>\r\n        Create new board\r\n      </Button>\r\n    );\r\n};\r\n\r\nexport default connect(null, mapDispatch)(AddBoardButton);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setActive } from \"./boardsSlice\";\r\nimport { Button } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst buttonStyle = {\r\n    backgroundColor: \"rgb(81, 152, 57)\",\r\n    height: \"80px\",\r\n    width: \"100%\",\r\n    fontSize: \"16px\",\r\n    fontWeight: 700,\r\n    color: \"white\",\r\n    display: \"inline-block\",\r\n    overflow: \"hidden\",\r\n    wordWrap: \"break-word\",\r\n    flex: \"0 0 auto\",\r\n    borderColor: \"transparent\",\r\n}\r\n\r\nconst mapDispatch = { setActive };\r\n\r\nconst BoardButton = ({ id, title, isPrivate, setActive }) => {\r\n  return (\r\n    <Link to={\"/user/boards/\" + id}>\r\n      <Button style={buttonStyle} onClick={() => setActive(id, true)}>{title}</Button>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default connect(null, mapDispatch)(BoardButton);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Icon } from \"antd\";\r\nimport AddBoardButton from \"./AddBoardButton\";\r\nimport BoardButton from \"./BoardButton\";\r\nimport axios from \"axios\";\r\nimport { fetchBoards } from \"./boardsSlice\";\r\n\r\nconst headerStyle = {\r\n  color: \"white\",\r\n  fontSize: \"24px\",\r\n  lineHeight: \"20px\",\r\n  fontWeight: 400\r\n};\r\n\r\nconst buttonContainerStyle = {\r\n  display: \"flex\",\r\n  flexWrap: \"wrap\",\r\n  flexGrow: 1,\r\n  minHeight: \"100%\",\r\n  width: \"100%\"\r\n};\r\n\r\nconst buttonStyle = {\r\n  width: \"calc(50% - 4px)\",\r\n  marginRight: \"4px\",\r\n  marginBottom: \"4px\"\r\n};\r\n\r\nconst BoardList = ({ boards, user, fetchBoards }) => {\r\n  useEffect(() => {\r\n    fetchBoards();\r\n  }, [user]);\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <p style={headerStyle}>\r\n          <Icon type=\"user\" /> Personal Boards\r\n        </p>\r\n      </div>\r\n      <div style={buttonContainerStyle}>\r\n        {Object.values(boards).map((board, i) => (\r\n          <div style={buttonStyle} key={i + board.id}>\r\n            <BoardButton key={board.id} {...board} />\r\n          </div>\r\n        ))}\r\n        <div style={buttonStyle}>\r\n          <AddBoardButton />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  boards: state.boards,\r\n  user: state.user,\r\n});\r\n\r\nconst mapDispatch = { fetchBoards };\r\n\r\nexport default connect(mapStateToProps, mapDispatch)(BoardList);\r\n","import React from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Board from \"../boards/Board\";\r\nimport BoardList from \"../boards/BoardList\";\r\n\r\nconst LoggedInRouter = () => {\r\n  return (\r\n    <main>\r\n      <Switch>\r\n        <Route\r\n          exact\r\n          path=\"/user/boards/:id\"\r\n          render={props => <Board id={props.match.params.id} />}\r\n        />\r\n        <Route exact path=\"/user/boards\" render={() => <BoardList />} />\r\n        <Route path=\"/\" render={() => <Redirect to=\"/user/boards\" />} />\r\n      </Switch>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default LoggedInRouter;\r\n","import React from \"react\";\r\nimport { Form, Icon, Input, Button } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst formStyle = {\r\n  borderRadius: \"3px\",\r\n  backgroundColor: \"white\",\r\n  minWidth: \"250px\",\r\n  width: \"20vw\",\r\n  margin: \"auto\", \r\n  marginTop: \"20vh\",\r\n  padding: \"4px 8px\"\r\n};\r\n\r\nconst LoginFormComponent = ({ onSubmit, form }) => {\r\n  const { getFieldDecorator } = form;\r\n\r\n  return (\r\n    <Form onSubmit={onSubmit} className=\"login-form\" style={formStyle}>\r\n      <Form.Item>\r\n        <h1\r\n          style={{ textAlign: \"center\", marginTop: \"4px\", marginBottom: \"0px\" }}\r\n        >\r\n          Log in to Trelloc\r\n        </h1>\r\n      </Form.Item>\r\n      <Form.Item>\r\n        {getFieldDecorator(\"email\", {\r\n          rules: [{ required: true, message: \"Please input your email!\" }]\r\n        })(\r\n          <Input\r\n            prefix={<Icon type=\"mail\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n            placeholder=\"Email\"\r\n          />\r\n        )}\r\n      </Form.Item>\r\n      <Form.Item>\r\n        {getFieldDecorator(\"password\", {\r\n          rules: [{ required: true, message: \"Please input your password!\" }]\r\n        })(\r\n          <Input\r\n            prefix={<Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n          />\r\n        )}\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Link to={\"/user/forgotpass/\"} style={{ marginRight: \"4px\" }}>\r\n          Forgot password\r\n        </Link>\r\n        <Link to={\"/user/register/\"} style={{ marginLeft: \"4px\" }}>\r\n          Register\r\n        </Link>\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n          Log in\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst LoginForm = Form.create({ name: \"login_form\" })(LoginFormComponent);\r\n\r\nexport default LoginForm;\r\n","import React, { useState, useCallback } from \"react\";\r\nimport LoginForm from \"./LoginForm\";\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"./userSlice\";\r\n\r\nconst LoginFormWrapper = ({ login }) => {\r\n  const [formRef, setFormRef] = useState(null);\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    formRef.validateFields((err, values) => {\r\n      if (err) {\r\n        return;\r\n      }\r\n      else {\r\n        login(values.email, values.password);\r\n        formRef.resetFields();\r\n      }\r\n    });\r\n  };\r\n\r\n  const saveFormRef = useCallback(node => {\r\n    if (node !== null) {\r\n      setFormRef(node);\r\n    }\r\n  }, []);\r\n\r\n  return <LoginForm ref={saveFormRef} onSubmit={handleSubmit} />;\r\n};\r\n\r\nconst mapDispatch = { login };\r\n\r\nexport default connect(null, mapDispatch)(LoginFormWrapper);\r\n","import React from \"react\";\r\nimport { Form, Icon, Input, Button } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst formStyle = {\r\n  borderRadius: \"3px\",\r\n  backgroundColor: \"white\",\r\n  minWidth: \"250px\",\r\n  width: \"20vw\",\r\n  margin: \"auto\",\r\n  marginTop: \"20vh\",\r\n  padding: \"4px 8px\"\r\n};\r\n\r\nconst inputStyle = {\r\n  marginBottom: \"4px\",\r\n  marginTop: \"4px\"\r\n}\r\n\r\nconst RegistrationFormComponent = ({ onSubmit, form }) => {\r\n  const { getFieldDecorator } = form;\r\n\r\n  const compareToFirstPassword = (rule, value, callback) => {\r\n    if (value && value !== form.getFieldValue(\"password\")) {\r\n      callback(\"Passwords must match!\");\r\n    } else {\r\n      callback();\r\n    }\r\n  };\r\n\r\n  const validateToNextPassword = (rule, value, callback) => {\r\n    if (value) {\r\n      form.validateFields([\"confirm\"], { force: true });\r\n    }\r\n    callback();\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={onSubmit} className=\"login-form\" style={formStyle}>\r\n      <Form.Item>\r\n        <h1\r\n          style={{ textAlign: \"center\", marginTop: \"4px\", marginBottom: \"0px\" }}\r\n        >\r\n          Register for a Trelloc Account\r\n        </h1>\r\n      </Form.Item>\r\n      <Form.Item style={inputStyle}>\r\n        {getFieldDecorator(\"username\", {\r\n          rules: [{ required: true, message: \"Please input your username!\" }]\r\n        })(\r\n          <Input\r\n            prefix={<Icon type=\"user\" style={{ color: \"rgba(0, 0, 0, .25\" }} />}\r\n            placeholder=\"Username\"\r\n          />\r\n        )}\r\n      </Form.Item>\r\n      <Form.Item style={inputStyle}>\r\n        {getFieldDecorator(\"email\", {\r\n          rules: [\r\n            { type: \"email\", message: \"Please input a valid email!\" },\r\n            { required: true, message: \"Please input your email!\" }\r\n          ]\r\n        })(\r\n          <Input\r\n            prefix={<Icon type=\"mail\" style={{ color: \"rgba(0, 0, 0, .25\" }} />}\r\n            placeholder=\"Email\"\r\n          />\r\n        )}\r\n      </Form.Item>\r\n      <Form.Item style={inputStyle}>\r\n        {getFieldDecorator(\"password\", {\r\n          rules: [\r\n            { required: true, message: \"Please input your password!\" },\r\n            { validator: validateToNextPassword }\r\n          ]\r\n        })(\r\n          <Input\r\n            prefix={<Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n          />\r\n        )}\r\n      </Form.Item>\r\n      <Form.Item style={inputStyle}>\r\n        {getFieldDecorator(\"confirm password\", {\r\n          rules: [\r\n            { required: true, message: \"Please confirm your password!\" },\r\n            {\r\n              validator: compareToFirstPassword\r\n            }\r\n          ]\r\n        })(\r\n          <Input\r\n            prefix={<Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />}\r\n            type=\"password\"\r\n            placeholder=\"Confirm password\"\r\n          />\r\n        )}\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n          Register\r\n        </Button>\r\n        <Link to={\"/user/login\"} style={{marginLeft: \"8px\"}}> or Log in</Link>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst RegistrationForm = Form.create({ name: \"registration_form\" })(\r\n  RegistrationFormComponent\r\n);\r\n\r\nexport default RegistrationForm;\r\n","import React, { useState, useCallback } from \"react\";\r\nimport RegistrationForm from \"./RegistrationForm\";\r\nimport { connect } from \"react-redux\";\r\nimport { register } from \"./userSlice\";\r\n\r\nconst RegistrationFormWrapper = ({ register }) => {\r\n  const [formRef, setFormRef] = useState(null);\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    formRef.validateFields((err, values) => {\r\n      if (err) {\r\n        return;\r\n      } else {\r\n        register(values.username, values.email, values.password);\r\n        formRef.resetFields();\r\n      }\r\n    });\r\n  };\r\n\r\n  const saveFormRef = useCallback(node => {\r\n    if (node !== null) {\r\n      setFormRef(node);\r\n    }\r\n  }, []);\r\n\r\n  return <RegistrationForm ref={saveFormRef} onSubmit={handleSubmit} />;\r\n};\r\n\r\nconst mapDispatch = { register };\r\n\r\nexport default connect(null, mapDispatch)(RegistrationFormWrapper);\r\n","import React from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport LoginFormWrapper from \"../user/LoginFormWrapper\"\r\nimport RegistrationFormWrapper from \"../user/RegistrationFormWrapper\"\r\n\r\nconst LoggedOutRouter = () => {\r\n  return (\r\n    <main>\r\n      <Switch>\r\n        <Route exact path=\"/user/login\" render={() => <LoginFormWrapper/>}/>\r\n        <Route exact path=\"/user/register\" render={() => <RegistrationFormWrapper/>}/>\r\n        <Route path=\"/\" render={() => <RegistrationFormWrapper/>}/>\r\n      </Switch>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default LoggedOutRouter;\r\n","export const isLoggedIn = (state) => {\r\n    return state[0] && state[0].token ? true : false;\r\n}\r\n\r\nexport const getAuthToken = (state) => {\r\n    return state[0] ? state[0].token : null;\r\n}","import React, { useEffect } from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport Header from \"../features/header/Header\";\r\nimport { Layout } from \"antd\";\r\nimport LoggedInRouter from \"../features/router/LoggedInRouter\";\r\nimport LoggedOutRouter from \"../features/router/LoggedOutRouter\";\r\nimport { isLoggedIn } from \"../selectors/UserSelectors\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchUserDetails } from \"../features/user/userSlice\";\r\nimport axios from \"axios\";\r\nimport Cookies from \"universal-cookie\";\r\n\r\nconst layoutStyle = {\r\n  backgroundColor: \"black\",\r\n  minHeight: \"100vh\",\r\n  fontFamily: \"Helvetica\",\r\n  fontSize: \"14px\",\r\n  fontWeight: 400,\r\n  lineHeight: \"20px\"\r\n};\r\n\r\nconst contentStyle = {\r\n  padding: \"4px\",\r\n  backgroundColor: \"black\",\r\n  height: \"100%\"\r\n};\r\n\r\nfunction App({ user, fetchUserDetails }) {\r\n  useEffect(() => {\r\n    const cookies = new Cookies();\r\n    const token = cookies.get(\"trelloc token\");\r\n\r\n    axios.defaults.baseURL = \"https://warm-sea-05824.herokuapp.com/api/\";\r\n    axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + token;\r\n    axios.defaults.headers.post[\"Content-Type\"] =\r\n      \"application/x-www-form-urlencoded\";\r\n\r\n    fetchUserDetails(token);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Layout style={layoutStyle}>\r\n        <Header />\r\n        <Layout.Content style={contentStyle}>\r\n          {isLoggedIn(user) ? <LoggedInRouter /> : <LoggedOutRouter />}\r\n        </Layout.Content>\r\n      </Layout>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  user: state.user\r\n});\r\n\r\nconst mapDispatch = { fetchUserDetails };\r\n\r\nexport default connect(mapStateToProps, mapDispatch)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport cardsReducer from \"../features/cards/cardsSlice\";\r\nimport listsReducer from \"../features/lists/listsSlice\";\r\nimport boardsReducer from \"../features/boards/boardsSlice\";\r\nimport userReducer from \"../features/user/userSlice\";\r\n\r\nexport default combineReducers({\r\n  cards: cardsReducer,\r\n  lists: listsReducer,\r\n  boards: boardsReducer,\r\n  user: userReducer\r\n});\r\n","import React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport { configureStore } from \"redux-starter-kit\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport \"./css/index.css\";\r\nimport App from \"./components/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer\r\n});\r\n\r\nrender(\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}